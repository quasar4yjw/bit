문제1. ? 안에 무슨 코드가 들어가야 하는지 맞추시오.
답 : this.name = name;
this.ban = ban;
this.no = no;
this.kor = kor;
this.eng = eng;
this.math = math;

class Exercise6_5 
{
    public static void main(String args[]) 
    {
	Student s = new Student("홍길동",1,1,100,60,76);
		
         System.out.println(s.info());
 
	class Student 
      {
		String name;
		int ban;
		int no;
		int kor;
		int eng;
		int math;

	Student(String name, int ban, int no, int kor, int eng, int math) {
	        ( ? )
	}

	int getTotal() {
		return kor+eng+math;
	}
	float getAverage() {
		return (int)(getTotal() / 3f * 10 + 0.5f) / 10f;
	}
	public String info() {
		return name
		+","+ban
		+","+no
		+","+kor
		+","+eng
		+","+math
		+","+getTotal()
		+","+getAverage()
	};
}



문제2. ( ? ) 안에 무엇이 들어가야 하나요?
답 :   Math.sqrt((x-x1)*(x-x1) + (y-y1)*(y-y1));
class Exercise6_6 
{
// 두 점 (x,y)와 (x1,y1)간의 거리를 구한다.
    static double getDistance(int x, int y, int x1, int y1) {
    return  ( ? );
}
public static void main(String args[]) {
    System.out.println(getDistance(1,1,2,2));
}



문제3. 평균을 구하는 함수 getAverage ( ? ) 안에 무엇이 들어가야 하나요?
답: return (int)(getTotal() / 3f * 10 + 0.5f) / 10f;
class Exercise6_4 {
public static void main(String args[]) {
	Student s = new Student();
	s.name = "홍길동";
	s.ban = 1;
	s.no = 1;
	s.kor = 100;
	s.eng = 60;
	s.math = 76;

	System.out.println("이름:"+s.name);
	System.out.println("총점:"+s.getTotal());
	System.out.println("평균:"+s.getAverage());
}
}
class Student 
{
	String name;
	int ban;
	int no;
	int kor;
	int eng;
	int math;
	int getTotal() 
        {
		return kor + eng + math;
	}
	float getAverage() 
	{
		return  ( ?  ) ;
	}	
}

문제4. 매개변수 없는 생성자 호출시 SutdaCard(1, true) 호출하기 위해 ( ? ) 안에 무엇이 들어가야 하나요?
답 : this(  1, true );
class Exercise6_2 
{
	public static void main(String args[]) 
	{
		SutdaCard card1 = new SutdaCard(3, false);
		SutdaCard card2 = new SutdaCard();
		System.out.println(card1.info()); // 3이 출력된다.
		System.out.println(card2.info()); // 1K가 출력된다.
	}
}
class SutdaCard {
	int num;
	boolean isKwang;

	SutdaCard() {
		( ? )
	}
	SutdaCard(int num, boolean isKwang) 
	{
		this.num = num;
		this.isKwang = isKwang;
	}
	String info() {   
		return num + ( isKwang? "K" : "");
	}
}




문제5. MyPoint 생성자 p와 (2,2)와의 거리를 구하기 위해 ?안에 알맞게 코드를 작성하시오.
답 :   p.getDistance( 2, 2 )
class MyPoint
 {
	int x; // 인스턴스 변수
	int y; // 인스턴스 변수
	MyPoint(int x, int y)
       {
		this.x = x;
		this.y = y;
	}

	double getDistance(int x1, int y1) 
	{
		return Math.sqrt((x-x1)*(x-x1) + (y-y1)*(y-y1));  
	}
}
class Exercise6_7 {
	public static void main(String args[]) {
		MyPoint p = new MyPoint(1,1);
		
		System.out.println(  ? );
}





문제6. 다음 1-5중 static을 붙여야 하는 것은 어느 것인가? 3
class Marine 
{
	( 1  )int x=0, y=0;
	// Marine의 위치좌표(x,y)
	( 2 ) int hp = 60;
	// 현재 체력

	( 3 ) int weapon = 6; // 공격력
	( 4 ) int armor = 0; // 방어력

	( 5 ) void weaponUp() {
		weapon++;
	}
	static void armorUp() {
		armor++;
	}

	void move(int x, int y) {
	this.x = x; // this.x는 인스턴스 변수, x는 지역변수
	this.y = y; // this.y는 인스턴스 변수, y는 지역변수
}
1 : 2, 3
2 : 4, 5
3 : 3, 4, 5
4 : 1, 4
5 : 3, 5





문제7.다음의 코드를 컴파일 하면 컴파일 에러가 발생한다. 컴파일 에러가 발생하는 곳을 전부 찾으시오.
답 : 2, 4, 8

class MemberCall 
{
	int iv = 10;
	(1) static int cv = 20;
	int iv2 = cv;
	(2) static int cv2 = iv;

	 
	static void staticMethod1() {
		(3)System.out.println(cv);
		(4)System.out.println(iv);
	}

	void instanceMethod1() 
        {
		(5)System.out.println(cv);
		(6)System.out.println(iv);
	}
	 
	static void staticMethod2() 
	{
		(7)staticMethod1();
		(8)instanceMethod1(); 
	}
	void instanceMethod2() 
	{
		(9)staticMethod1();
		(10)instanceMethod1();
	}
}




문제8. a, b 에 적당한 코드를 입력하시오.
답 : a -> String msg 
     b -> int testNum 
public class exam02 {
 
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		prtMsg();
		prtMsg("HI~");
		prtMsg(5);
	}
	
	public static void prtMsg(){
		System.out.println("Hello World!!");
	}
	
	public static void prtMsg(  a  ){
		System.out.println(msg);
	}
	
	public static void prtMsg(  b   ){
		System.out.println(testNum);
	}
}




문제9. 다음 오버로딩이라고 할 수 없는 것은?
답 : 5
public class exam02 {
 
	public static void main(String[] args) {
		 
	}
	
	(1)public static void prtMsg(){
		System.out.println("Hello World!!");
	}
	
	(2)public static void prtMsg( String msg ){
		System.out.println(msg);
	}
	
	(3)public static void prtMsg( int  testNum   ){
		System.out.println(testNum);
	}

	(4)public static void prtMsg( int  testNum, int testnum2   ){
		System.out.println(testNum , testnum2);
	}

	(5)public static int prtMsg(  int f  ){
		return f;
	}
}


문제 10 실행 결과를 예측하여 적으시오.
답: ABC123
    After change:ABC123456
class Exercise6_19
{
	public static void change(String str) 
	{
		str += "456";
	}
	public static void main(String[] args)
	{
		String str = "ABC123";
		System.out.println(str);
		change(str);
		System.out.println("After change:"+str);
	}
}

----------------------------------------------------------------

1) 아래 class가 제대로 작동 할 수 있도록 빈칸을 채워 주세요. (下)

public class Test {

public static void main(String[] args){

System.____.println(“학생은 그동안 자바에 소홀했었지")

System.____.println(“이제부터 테스트를 시작하도록 하지")

static int v1;

static int v2;

static _______ op;

static int result;

static int compute () {

result = 0;

switch(op) {

 		____ "+" : result = v1 + v2;

 		____ "-" : result = v1 - v2;

 		____ "*" : result = v1 * v2;

 		____ "/" : result = v1 / v2;
		
 		____ "%" : result = v1 % v2;

 default : System._____.print(“유효하지 않은 연산자 =>")

 }

return ______;

 }

 }

정답 : 빈칸 순서대로 -> out , out , String, case , case , case, case, case, out, result


2) Garbage Collector가 되어 필요없는 memory를 지워주세요.

----------------------------------------------------------------------
package test.garbageCollertor -----(1)

import java.util.scanner -----(2)

public class garbage { 

 public static void main(String[] args) { 

 String[] vegetables = new String[] {“apple”, “banana”, “kiwi”}; -

------(3)

 String[] vitaminSource = new String[] { “corn”, “tomato”, “turnip”}; -

------(4)

 String[] vegetables = vitaminSource;

 for (String value : vitaminSource) {

 System.out.println(value);

 		}

	 }
}

정답 : (4)


3) 아래 클래스와 같은 배열을 만들 때 Import해야 할 Class는? ( 단, *는 제외 )

----------------------------------------------------------------------------------------------------------------------------

package test.import

import java.util.______________

public class import {

public static void main(String[] args) {

int[] luckyNumbers = new int[] { 7, 515, 6, 13, 0};

String[] names = new String[4];

names[2] = “Rooney”;

names[0] = “Jisung, Park”;

ArrayList bodySpec = new list();

bodySpec.add(“Seoul”);

bodySpec.add(180);

bodySpec.add(75);

bodySpec.add(true);

	}
}

정답 : ArrayList


4) 아래 Class는 작동하지 않습니다. 밑줄 친 부분 중 잘못된 부분을 고쳐 작동하게 해주세요

----------------------------------------------------------------------------------------------------------------------------

package.test.polymorph

public class bmiCheck{

public static void main(String[] args){

int yourWeight = 80; ----1)

int standardWeight ; ----2)

float height = 180; ----3)

float bmi; ----4)

standardWeight = (float) ((height - 100) * 0.9) ; ---- 5)

bmi = yourWeight / standardWeight;

System.out.println(“ 당신의 비만 지수는 " + bmi + “% 입니다.");

	}
}

답) 2)를 float로 고친다


5) 두 토끼가 절구를 찧고 있습니다. 두 토끼가 찧은 횟수가 출력값과 같도록 밑줄을 채워주세요.

---------------------------------------------------------------------

package practice.practice1;

public class rabbits {

 public static void main(String[] arg){

 Julgu rabbit1 = new Julgu();

 Julgu rabbit2 = new Julgu();

 

 Julgu.kung(rabbit1 , 1);

 Julgu.kung(rabbit2 , 1);

 Julgu.kung(rabbit1 , 1);

 Julgu.kung(rabbit2 , 1);

 System.out.println("두 토끼는 총" + rabbit1.result +"번 절구질 하였습니다.");

 // 두 토끼는 총 4번 절구질 하였습니다. <--출력값

}

public static class Julgu {

____ int result = 0;

____ int kung (Julgu that , int value) {

 

 return result += value;

}

}

}

답) static

6) 다음은 신체정보를 입력하는 클래스 입니다.

나쁜 사람이 다른 곳에서 신체정보를 바꿀 수 없도록 밑줄을 채워주세요.

--------------------------------------------------------------

public class BodySpec {

 ______ static int height;

 ______ static int weight;

 static int getSpec(BodySpec that) {

return that.height;

return that.weight;
}

 static void height(BodySpec that, int value){

that.height = value;
}

 static void weight(BodySpec that, int value){

that.weight -= value;
}


답) 빈칸에 private 접근 제어자를 적어 넣습니다.


7) 다음 소스의 크기를 줄이려고 합니다. 밑줄 친 부분을 줄여주세요

-----------------------------------------------------------------
public class AutoboxingTest {

 public static void main(String args[]) {

 int i1 = 1;

 int i2 = 1;

int i3 = i2.intValue(); =>

 System.out.println("i1==i2 : " + (i1 == i2)); 

 Integer num1 = new Integer(1); => __

 int num2 = 1;

 System.out.println("num1 == num2 : " + (num1 == num2)); 

 Integer obj1 = Integer.valueOf(1); => __

 Integer obj2 = Integer.valueOf(1); => __

 System.out.println("obj1 == obj2 : " + (obj1 == obj2));

 Integer one = new Integer(1); => __

 Integer anotherOne = new Integer(1); => __

 System.out.println("one == anotherOne : " + (one == anotherOne)); 

 }
}

답)순서대로 .intValue삭제, 1,1,1,1,1,1


8)다음 클래스가 작동할 수 있도록 밑줄을 바르게 채워 주세요.

---------------------------------------------------------------------

public class 오버로드 {

 String name; 

 int mineral;

 int gas;

 int popula;

 public 오버로드() {} 

 public 해처리(){}

 public 오버로드(String name, int mineral, int gas, int popula) {

this.name = name;

this.mineral = mineral;

this.gas = gas;

this.popula = popula;

	}
}

---------------------------------------------------------------------

import practice.practice1.오버로드;

public class overloadmain {

 public static void main(String[] args) {

 

오버로드 lava1 = new ______ ("저글링", 50, 0, 1);

______ lava2 = new 오버로드 ();

lava2.name = "뮤탈리스크";

lava2.mineral = 100;

lava2.gas = 150;

lava2.popula = 2;

 

System.out.println("이름 : " + lava1.name);

System.out.println("미네랄 : " + lava1.mineral);

System.out.println("가스 : " + lava1.gas);

System.out.println("인구 : " + lava1.popula);

 }

}

답) 오버로드, 오버로드.


9) 다음 클래스가 정확한 계산을 할 수 있도록 밑줄을 채워주세요

-------------------------------------------------------------------
public class 마법사 { 

public static void main(String[] args){ 

//각 종족의 마법사의 정신력을 측정합니다.

byte 언데드기사 = 50;

byte 언데드마법사 = 125;

short 인간성기사 = 250;

short 인간마법사 = 1200;

int 타우렌기사 = 200;

int 타우렌마법사 = 1320;

1)______ 언데드총정신력 = 언데드기사 +언데드마법사;

2)______ 마법사총정신력 = 언데드마법사 + 인간마법사 + 타우렌마법사;

3)______ 마법사평균정신력 = 4)(______)마법사총정신력 / 3;

	}
}

답 : 1) int 2)int 3)4) float 또는 double (단, 3과 4는 같아야한다.)


10) 다음 클래스가 작동할 수 있도록 밑줄을 채워주세요.

----------------------------------------------------------------------------------------------------------------------------

import java.util. 1)_________;

public class youngheeBrain {

public static void main(String[] args) {

System.out.println(“영희 : 너가 그런다고 다시 만나주지 않아.”);

System.out.println(“철수 : a. 엄마가 너 놓치지 말래.”);

System.out.println(“철수 : b. 사실 우리 아버지가 삼성 사장이야.”);

System.out.println(“철수 : c. 소홀했던거 미안해. 앞으로 잘할께.");

System.out.println(“철수 : d. 너가 좋아하는 글렌피딕 30년산이야.");

Systme.out.print(“대답 입력 후 엔터");

1)__________ input = new 1)__________(System.in);

2)_______ answer = input.3)__________;

switch (answer){

 case "a" : System.out.println("그럼 엄마한테 가."); break;

 case "b" : System.out.println("그...근데??!!!!!!!"); break;

 case "c" : System.out.println("몰라, 생각해볼께.....");

 case "d" : System.out.println("그냥. 헤어지자"); break;

 default : System.out.println("왜 불렀냐?");

 	}

 }
}
답 : 1)Scanner (대문자 유의) 2)String(대문자 유의) 3)nextLine() (대문자 유의)


 ------------------------------------------------------------------------------- 
  
 1. 다음 소스와 실행 결과를 보고 빈 칸의 내용을 보기에서 고르시오.

- 보 기 - 
 1) new     2) void     3) return    4) public   5) Test
 6) private  7) return  8) static    9) int      10) class
 

 public class Test01 {
     public static void main(String[] args) {
         Test t1 = Test.getInstance();
         Test t2 = Test.getInstance();
         t1.setX(5);
         t2.setX(10);
         System.out.println(t1.getX());
         System.out.println(t2.getX());
     }
 }

 (___a)___) Test {
     private (___b)___) Test t = null;
     private int x;

     // private : 다른 class의 인스턴스 생성 막음
     private Test(){}

     public (___c)___) Test getInstance() {
        if ( t == null){
           t = (___d)___) Test();
         }
         return t;
     }

     public (___e)___) getX() {
         return x;
     }

     public void setX((___f)___) x) {
         this.x = x;
     }
 }

 
 - 결 과 ------------------------------------------------
 10
 10
 

 - 정 답 ------------------------------------------------
a) 10
b) 8
c) 8
d) 1
e) 9
f) 9


 ------------------------------------------------------------------------------- 

2. encapsulation 을 실현한 Player 클래스의 기능을 보고 빈 칸을 채우시오. 

- 기 능 -
player를 생성할 때마다 id가 자동 증가하여 부여된다.
setId()가 private로 제한되어 있으므로 id의 값을 변경할 수 없고,
getId()또한 protected로 제한 되어 있으므로 상속이외의 방법으로
id값을 알 수 없으므로 보안상 좋다.

 public class Player {
     private static int nextId = 1;
     private int id;
     
     public Player(){
         id = (________) + 1;
     }
     
     protected int getId(){
         return id;
     }
     
     private void setId(int id){
         this.id = id;
     }
 }

 - 정 답 ------------------------------------------------
 nextId
 
------------------------------------------------------------------------------- 

3. 다음의 클래스와 실행 결과를 보고 소스의 빈칸을 채우시오.

public class ExampleOverloading{

  public static void main(String[] args) {
     int a = 11;
     int b = 6;
     double c = 7.3;
     double d = 9.4;
     int result1 = (_______a)_________);
     // same function name with different parameters
     double result2 = (_______b)_________);
     System.out.println("Minimum Value = " + result1);
     System.out.println("Minimum Value = " + result2);
  }
  public static int minFunction(int n1, int n2) {
     int min;
     if (n1 > n2)
        min = n2;
     else
        min = n1;

     return min; 
  }
  public static double minFunction(double n1, double n2) {
    double min;
     if (n1 > n2)
        min = n2;
     else
        min = n1;

     return min; 
  }
}

- 결 과 ------------------------------------------------
Minimum Value = 6
Minimum Value = 7.3

- 정 답 ------------------------------------------------
a) minFunction(a, b)
b) minFunction(c, d)

------------------------------------------------------------------------------- 

4. 다음의 소스에서 빈칸에 해당하는 것을 보기에서 골라 빈칸을 채우시오.

- 보기 -
a) salary   b) Employee   c) designation    d) empOne   e) empDesignation
f) empAge   g) employ     h) printEmployee  i) 


public class EmployeeTest{
   public static void main(String args[]){
      Employee (___a)___) = new Employee("Eom");

      empOne.empAge(43);
      empOne.(___b)___)("King");
      empOne.empSalary(1000);
      empOne.printEmployee();
   }
}


class Employee{
  String name;
  int age;
  String designation;
  long salary;
  
  public Employee(String name){
     this.name = name;
  }
  public void (___c)___)(int empAge){
     age =  empAge;
  }
  public void empDesignation(String empDesig){
     designation = empDesig;
  }
  public void (___d)___)(long empSalary){
     salary = empSalary;
  }
  public void printEmployee(){
     System.out.println("Name:"+ name );
     System.out.println("Age:" + age );
     System.out.println("Designation:" + designation );
     System.out.println("Salary:" + salary);
  }
}

- 결 과 ------------------------------------------------
Name:Eom
Age:43
Designation:King
Salary:1000



- 정 답 ------------------------------------------------
 a) empOne
 b) empDesignation
 c) empAge
 d) empSalary

-------------------------------------------------------------------------------   
  
5. 다음 소스의 실행시 출력되는 숫자를 모두 고르시오.

public class TestPoint{
  public static void main(String args[]){
     Point p1 = new Point(20, 10);
     Point p2 = new Point();
     p1.setX(10);
     p2.setY(30);

     System.out.println(p1.getX());
     System.out.println(p1.getY());
     System.out.println(p2.getX());
     System.out.println(p2.getY());
  }
}
class Point{
  private int x;
  private int y;
  
  public Point(){}
  public Point(int x, int y){
    this.x = x;
    this.y = y;
  }
  public int getX(){ return this.x; }
  public int getY(){ return this.y; }
  public void setX(int x){ this.x = x; }
  public void setY(int y){ this.y = y; }
}

  1) 20   2) 0    3) 30   4)  40    5) 10

- 정 답 ------------------------------------------------ 
2, 3, 5

-------------------------------------------------------------------------------   
  
6. 다음 소스의 실행시 출력되는 숫자를 모두 고르시오.

public class VarargsDemo {

  public static void main(String args[]) {
     // Call method with variable args  
   printMax(34, 3, 3, 2, 56.5);
     printMax(new double[]{1, 2, 3});
  }

  public static void printMax( double... numbers) {
  if (numbers.length == 0) {
     System.out.println("No argument passed");
     return;
  }

  double result = numbers[0];

  for (int i = 1; i <  numbers.length; i++)
     if (numbers[i] >  result)
       result = numbers[i];
     System.out.println(result);
  }
}
 
    1) 3    2) 2   3) 56.5    4) 1    5) 3.0

 - 정 답 ------------------------------------------------
 3, 5
 
 ------------------------------------------------------------------------------- 
  
7. 다음 소스의 실행시 출력되는 내용을 적으시오
  예)
    13, 57
    43, 54

public class swappingExample {

  public static void main(String[] args) {
     int a = 30;
     int b = 45;

     System.out.println(a + ", " + b);
     swapFunction(a, b);
     System.out.println(a + ", " + b);
  }

  public static void swapFunction(int a, int b) {
     int c = a;
     a = b;
     b = c;
  }
}

- 정 답 ------------------------------------------------
30, 45
30, 45

------------------------------------------------------------------------------- 

8. 다음 소스의 기능을 참고하여 빈칸을 채우시오.

 - 기 능 -
 1. box 의 너비 높이 깊이를 입력받아 volume(용적)을 구할수 있다.
 2. box 두개의 용적을 합하여 출력할 수 있다. 

class Box{
  private double length;
  private double breadth;
  private double height;
  
  public double getVolume(){
         return length * breadth * height;
  }
  void setLength( double length ){
          this.length = length;
  }
  void setBreadth( double breadth ){
          this.breadth = breadth;
  }
  void setHeight( double height ){
          this.height = height;
  }
  (__a)__) sumBoxVol(Box b){
     Box box = new Box();
     (____b)____) = this.length + b.length;
     (____c)____) = this.breadth + b.breadth;
     (____d)____) = this.height + b.height;
     return box;
  }
}

public class Question01{
  public static void main(String[] args){
     Box box1 = new Box();
     Box box2 = new Box();
   
     box1.setLength(2.0); 
     box1.setBreadth(3.0); 
     box1.setHeight(4.0);
   
     box2.setLength(3.0); 
     box2.setBreadth(4.0); 
     box2.setHeight(5.0);
   
     System.out.println(box1.getVolume());  // box1 volume 출력
     System.out.println(box2.getVolume());  // box2 volume 출력

     // box1, box2 volume 합 출력
     System.out.println((_______e)_______).getVolume());    
  }
}

- 결 과 ------------------------------------------------
24.0
60.0
315.0

- 정 답 ------------------------------------------------
a) Box
b) box.length
c) box.breadth
d) box.height
e) box1.sumBoxVol(box2)

------------------------------------------------------------------------------- 

9. 다음 소스의 실행시 출력되는 내용을 적으시오

class Adder{
  private int total;
  
  public Adder(){}
  
  public Adder(int value){
    total = value;
  }
  
  void addNum(int number){
    total += number;
  }
  
  int getTotal(){
    return total;
  }
}

public class testAdder{
  public static void main(String[] args)
  {
    Adder a = new Adder(5);
    
    a.addNum(10);
    a.addNum(20);
    a.addNum(30);

    System.out.println("Total:" + a.getTotal());
  }
}

 - 정 답 ------------------------------------------------
 65
 
------------------------------------------------------------------------------- 
  
10. 다음 소스의 기능을 참고하여 빈칸을 채우시오.
class Rectangle{
  private double length;
  private double width;

  public void Acceptdetails(){
    
    java.util.Scanner scanner = new java.util.Scanner(System.in);
    System.out.print("Enter Length: ");
    length = scanner.nextDouble();
    System.out.print("Enter Width: ");
    width = scanner.nextDouble();
  }
  public double GetArea(){
    return length * width;
  }
  public void Display(){
    System.out.println("--------계산 결과------------");
    System.out.println("Length: " + (__a)__));
    System.out.println("Width: " + (__b)__));
    System.out.println("Area: " + (__c)__));
  }
}
public class ExecuteRectangle{
  public static void main(String[] args)
  {
    Rectangle rect = new Rectangle();
    rect.Acceptdetails();
    (__d)__)();
  }
}

 - 결 과 ------------------------------------------------
Enter Length: 10
Enter Width: 20
--------계산 결과------------
Length: 10.0
Width: 20.0
Area: 200.0

- 정 답 ------------------------------------------------
a) length
b) width
c) GetArea()
d) rect.Display

-------------------------------------------------------------------------------



1. 다음 코드를 실행하여 출력되는 결과로 올바른 것을 골라라.

public class Calc {
	int n1;
	int n2 = 50;
	
	public Calc(){
		System.out.print("와우!! ");
	}
	public int Calc(int n1){
		return this.n1 += n1;
	}
	public int Calc(int n1, int n2){
		return this.n1 * n2; 
	}
}


public class Exam01 {

	public static void main(String[] args) {
		
		Calc c = new Calc();
		
		System.out.print(c.calc(10));
	}

}

1) 와우!!
2) 실행되지 않는다.
3) 10
4) 와우!! 10
5) 500

정답 : 4

Calc() 는 기본 생성자로 위 코드를 실행하면
Calc c = new Calc(); 로 생성만 해도  "와우!!" 가 실행되는걸 볼 수 있다.
그 뒤 매개변수에 따라 실행된다.



2. 다음 코드를 실행했을때 결과로 올바른 것을 골라라.

public class Exam02 {

	public static void main(String[] args) {
		Salary pay = new Salary();
		
		pay.Salary(50000);
		pay.Salary(5000, 6);
		
		System.out.println(pay.payCheck);
	}
}
public class Salary {
	int payCheck;
	int money;
	int time;

	public void Salary(int money){
		this.money += money;
		payCheck += money;
	}
	public void Salary(int money, int time){
		this.money += money;
		this.time = time;
		payCheck += (money * time);
	}
	public int getPayCheck(){
		return payCheck;
	}
}

1) 80000
2) 380000
3) 50000
4) 190000
5) 130000

정답 : 1

payCheck 에는 this 가 안붙은걸 더했으므로 
매개변수로 넘어온 money와 time 이 더해져서 80000 이 된다.



3. 다음 코드를 실행 하였을 때 출력 되는 문장이 아닌 것은?

public class Overloadingtest {
    void test(){
        System.out.println("매개변수 없음");
}
    void test(int a, int b){
        System.out.println("매개변수 "+ a + "와 " + b);
    }
    void test(double d){
        System.out.println("매개변수 " + d);
    }
}

public class test {

    public static void main(String[] args) {
        Overloadingtest ob = new Overloadingtest();

        ob.test();

        ob.test(10, 20);
        
        ob.test(50);

        ob.test(123.4);
    }
}

1) 매개변수 없음
2) 매개변수 10와 20
3) 매개변수 50.0
4) 매개변수 123.4
5) 매개변수 50


정답 : 5


ob.test(50); 에서 50이 넘어오지만 double 에서 받으므로 50.0 으로 출력된다.


4. 다음 코드를 실행 했을때 에러가 나는 문장은 몇인가?(2개)

public class TestTest {
	public int num1;
	private int num2;

	public int Test_1(){
		return 1;
	}
	protected int Test_2(){
		return 2;
	}
	private int Test_3(){
		return 3;
	}
}
public class Exam03 {

	public static void main(String[] args) {
		TestTest tt = new TestTest();
		
		1) tt.num1 = 100;
		2)tt.num2 = 100;
		
		3)System.out.println(tt.Test_1());
		4)System.out.println(tt.Test_2());
		5)System.out.println(tt.Test_3());
	}
}




정답 : 2, 5 




2,5 번은 private 이므로 에러가 발생한다.



5. 원하는 결과가 나올수 있도록 빈칸을 채워라.

public class CarTest {
	public static void main(String[] args) {
		
		Car myCar = new Car();
		
		1)_________________
		2)_________________
		
		System.out.println("현재 속도는 : "+ myCar.getSpeed());
	}
}

public class Car {
	private int speed;
	public void setSpeedUp(int num){
		speed += num;
	}
	public void setSpeedDown(int num){
		speed -= num;
	}
	public int getSpeed(){
		3)_________________
	}
}

	•	myCar 의 속도를 10 만큼 늘린다.
	:
	•	myCar 의 속도를 5 만큼 내린다.
	:
	•	getSpeed 로 속도를 확인할 수 있도록 값을 반환한다.
	:



정답 :  1)myCar.setSpeedUp(10);
2)myCar.setSpeedDown(5);
3)return speed;


6. 다음 코드를 실행했을때의 결과로 올바른 것을 골라라

public class NumTest {
	public static void main(String[] args) {
		Num num = new Num();
		
		num.plus(100);
		num.minus(50);
		
		num.calc(100, 200);
		
		System.out.println("결과 : "+num.result);
	}
}
public class Num {
	private int num1;
	private int num2;
	public int result;

	public void plus(int num1){
		this.num1 = num1;
	}
	public void minus(int num2){
		this.num2 = num2;
	}
	public void calc(int num1, int num2){
		result = this.num1 * this.num2;
	}
}

	•	결과 : 500
	•	결과 : 20000
	•	결과 : 5000
	•	결과 : 2000
	•	실행되지 않는다.


정답 : 3


this.num1 * this.num2; 이므로 100 과 50을 곱한다. 5000



7. 적절한 결과가 나올 수 있도록 다음 빈칸을 모두 채워라.

import 1)_________________ 
public class Student {
	private String name;
	private String major;
	private int age;
	public void setInfo(2)__________________________){
		this.name = name;
		this.major = major;
		this.age = age;
	}
	public String getInfo(){
		return "이름 : "+name+", 학과 : "+major+", 나이 :"+age;
	}
}
public class StudentTest {
	public static void main(String[] args) {
		Student stu = new Student();
		Scanner scan = new Scanner(System.in);

		System.out.println("학생의 이름, 학과, 나이 입력하세요");
		String name = scan.next();
		String major = scan.next();
		int age = scan.nextInt();
		stu.setInfo(name, major, age);
		System.out.println(3)____________); // 결과 출력
	}
}

입력 > 홍길동 컴퓨터공학 28
출력 결과 > 이름 : 홍길동, 학과 : 컴퓨터공학, 나이 : 28

1)_________________________________

2)_________________________________

3)_________________________________

정답 : 
1) java.util.Scanner;
2) String name, String major, int age
3) stu.getInfo()


8. 다음 코드를 실행 했을때 출력되는 통장 1,2,3의 잔액은 얼마인가?

public class MoneyTest {
	public static void main(String[] args) {
		Money don1 = new Money();
		Money don2 = new Money();
		Money don3 = new Money();
		
		don1.setMoney(10000);
		don2.setMoney(10000);
		don3.setMoney(10000);
		
		System.out.println(don1.getMoney());
	}
}
public class Money {
	public static int bankbook1;
	public int bankbook2;
	static int bankbook3;
	
	public void setMoney(int money){
		bankbook1 += money;
		bankbook2 += money;
		bankbook3 += money;
	}
	public String getMoney(){
		return "통장 1의 잔액은 : "+bankbook1+"원\n"
				+"통장 2의 잔액은 : "+bankbook2+"원\n"
				+"통장 3의 잔액은 : "+bankbook3+"원 입니다.";
	}
}

1) 10000, 10000, 10000
2) 10000, 30000, 30000
3) 30000, 10000, 30000
4) 30000, 30000, 10000
5) 30000, 30000, 30000

정답 : 3



9. 다음 코드를 실행했을때 출력되는 메세지로 적절한 것을 골라라

public class OverLodingTest {
	public static void main(String[] args) {
		OverLoding ov = new OverLoding();
		
		int input = 1;

		System.out.println(ov.Test(input));
	}
}

public class OverLoding {
	
	public String Test(double input){
		return "double 타입입니다.";
	}
	public String Test(char input){
		return "char 타입입니다.";
	}
	public String Test(boolean input){
		return "boolean 타입입니다.";
	}
	public String Test(){
		return "입력값이 없습니다.";
	}
}

1) double 타입입니다.
2) char 타입입니다.
3) boolean 타입입니다.
4) 입력값이 없습니다.
5) int 타입은 없으므로 에러 발생


정답 : 1 
정수형 이므로 double 타입으로 받는다.


10. public class Game {
	private int hp;
	private int power;
	private String type;

	public Game(int type){
		if(type == 1){
			this.hp = 45;
			this.power = 10;
			this.type = "용사";
		}else {
			this.hp = 55;
			this.power = 8;
			this.type = "몬스터";
		}	}
	public int attack(){
		if(this.type == "용사") System.out.println("용사의 공격");
		else System.out.println("몬스터의 공격");
		return this.power;
	}
	public void hit(int power){
		this.hp -= power;
		if(this.type == "용사") System.out.println("용사는 "+power+"만큼의 데미지를 입었다!");
		else System.out.println("몬스터는 "+power+"만큼의 데미지를 입었다!");
		
		if(this.hp < 0) System.out.println("으앙 주금");
	}	}
public class GameTest {
	public static void main(String[] args) {
		Game hero = new Game(1);
		Game monster = new Game(2);

		monster.hit(hero.attack());
		hero.hit(monster.attack());
		monster.hit(hero.attack());
		monster.hit(hero.attack());
		hero.hit(monster.attack());
		monster.hit(hero.attack());
		monster.hit(hero.attack());
		hero.hit(monster.attack());
		hero.hit(monster.attack());
		hero.hit(monster.attack());
		monster.hit(hero.attack());
	}	}

누가 이겼는가?

정답 : 용사 (체력 5 남음)


 ------------------------------------------------------------------------------- 


package java01.ex1;                      //  답: (1) Pizza   (2)int price = 0;   (3) !=  (4)this.price
import java.util.Scanner;

public class ex1 {   /*피자 가격 계산하는 프로그램 */  

	public static void main(String[] args) {
		
	   System.out.print("Q.(How many)몇 판 시키실건가요?\nA.");
	   Scanner scanner = new Scanner(System.in);
	   Integer number = scanner.nextInt();
	   [(1)_______] pizza= new Pizza();
	  
	   for(int i=1; i<=number ; i++){
	      System.out.println("***"+i+"번째 피자***");
		   pizza.size();
		   pizza.dough();
		   pizza.topping();
	   }
           System.out.println("***************");
	   pizza.beverage();
	   pizza.printTotal();
	}
}
-------------------------------------------*-------------------------------------------
package java01.ex1;

import java.util.Scanner;
public class Pizza {
	  Scanner scanner = new Scanner(System.in);
	  [(2)___________]//초기화

		public void size(){
			System.out.print("Q.사이즈(Size)를 골라주세요!"
			   		+ "1.Medium / 2.Large / 3.Family \nA.");
			   Integer size = scanner.nextInt();
			   
			   switch(size){
				case 1: this.price += 1000;break;
				case 2: this.price += 5000;break;
				case 3: this.price += 10000;break;
				default: System.out.println("잘못입력하셨습니다...");
			   }
		}
		public void dough(){
			System.out.print("Q.빵을(도우Dough를) 골라 주세요! "
			   		+ "1.얇은 Thin / "
			   		+ "2.치즈 크러스트 Cheese Crust / "
			   		+ "3.고구마 패이스트 SweetPotato Paste \nA.");
			Integer dough =scanner.nextInt();
		   
			switch(dough){
			case 1: this.price += 10000; break;
			case 2: this.price += 13000; break;
			case 3: this.price += 15000; break;
			default: System.out.println("잘못입력하셨습니다...");
			}
		}
		
		public void topping(){
			 System.out.print("Q.피자에 올라갈 재료를(Toppings토핑을) 골라 주세요! "
				   		+ "1.파인애플(Pineapple) /"
				   		+ "2.체다치즈(Cheda Cheese) / "
				   		+ "3.감자(Potato) /"
				   		+ "4.새우(Shrimp)/ \nA.");
		   
			 Integer topping = scanner.nextInt();
			   
			switch(topping){
				case 1: this.price  += 3000; break;
				case 2: this.price  += 3000; break;
				case 3: this.price  += 5000; break;
				case 4: this.price  += 7000; break;
				default: System.out.println("잘못입력하셨습니다...");
			}
		}
		
		public void beverage(){
			
			System.out.print("Q.음료를(Beverage)골라 주세요! "
			   		+ "1.콜라 (Coke) / "
			   		+ "2.사이다 (Cider) / "
			   		+ "3.환타 Fanta(Orange)/"
					+ "4.안마심(No, thanks)  \n A.");
			Integer beverage = scanner.nextInt();
		    if(beverage [(3)______] 4) {
		    	this.price += 1000;
		    	System.out.println(" Q.음료 사이즈? 1.500ml /  2.1L  /  3.1.5L \n A.");
		    	Integer beverSize = scanner.nextInt();
		    	
		    	switch(beverSize){
				case 1: this.price  += 0; break;
				case 2: this.price  += 500; break;
				case 3: this.price  += 1000; break;
				default: System.out.println("잘못입력하셨습니다...");
     			}	 
		    }
		}

		public void printTotal(){
			 System.out.println("총 가격은"+[(4)_______ ]+"입니다. 감사합니다♥");  
		}
}



package java01.ex2; //답:  (1)boolean power (2) !this.power (3)tv2.volume(15);

public class RemoteController {
	
		int channel;
		int volume;
		boolean power;	

	   public RemoteController() {	
		   this.power =true ;
	    }

	   public RemoteController(int channel, int volume, [(1)__________]){
		   this.channel = channel;
		   this.volume = volume;
		   this.power = power;
			
		}
	   void channelUp(){ 	++this.channel;	}
                   void channelDown(){ 	--this.channel;	}
	   void volumeUp(){  	++this.volume;	}
	   void volumeDown(){ 	--this.volume;	}
	   void volume(int num){
	   	this.volume = num;
	   }
	   void power() { this.power = [(2)________]; }
	   String OnorOff(){
	   	if(this.power == true) return "ON";
	   	else return "OFF";
	   }
}

package java01.ex2;

public class ex2 {

	public static void main(String[] args) {
		RemoteController tv1 = new RemoteController(7, 10, true);//KBS		
		RemoteController tv2 = new RemoteController(10, 0, false);//EBS
		
		tv1.channelDown();
		tv1.volumeDown();
		tv1.volumeDown();
		tv1.power();
		
		tv2.power();
		tv2.channelUp();
		[(3)______________]
		
		System.out.println("tv1의 "
				+ "채널은 " + tv1.channel        //6
				+ " 음량은 " + tv1.volume        //8
				+ " 전원은 " + tv1.OnorOff()     //OFF
		);
		System.out.println("tv2의 "
				+ "채널은 " + tv2.channel       //11
				+ " 음량은 " + tv2.volume       //15
				+ " 전원은 " + tv2.OnorOff()    //ON
		);
	}

}

package java01.ex3;
 
public class ex3 {   (1)pb  (2)(byte)   (3)toString() (4) parseInt

	public static void main(String[] args) {
				
		byte pb = 20;
		Byte b = new Byte(   [(1)_____]   );
		Byte b2 = 40;
		Byte b3 = new Byte(   [(2)____] 60);
		
		String s = b. [(3)________];
		Integer i =Integer. [(4)_______](s);
		Integer i2 =new Integer(20);
		
		System.out.println("i와i2 값이 같니 ? "+i.equals(i2)); //true
		Long l = new Long(20);
		Float f =new Float(20.0f);
		Character c =new Character('A');

		System.out.println("b = " + b);    //20
		System.out.println("b3 = " + b3);  //60
		System.out.println("s = " +s);     //20
		
	}

}




package java01.ex4;

public class ex4 {    // (1)setData  (2)10000 or 10000.0 (3) String (4) getAge()

	public static void main(String[] args) {
		Profile p1 = new Profile();
		Profile p2 = new Profile();

		System.out.println(p1.getData());
		//이름, 생년월일(YYYYMMDD), 오늘날짜(YYYYMMDD)
		p2. [(1)_____]("JisungPark",19810225, 20141020);
		System.out.println(p2.getData());
		
	}

}

package java01.ex4;

public class Profile {
	 String name = "YeonjungBae";
	 double birthDay = 19920520;
	 double today = 20141020;
	 double age ;
	 
	 protected void getAge(){
		 this.age= ((this.today - this.birthDay)/[(2)_____])+1.0;
	 }
	 
	 protected [(3)_____] getData() {
		[(4)_____];
		 return (this.name + "'s age : " +this.age);
	 }

	protected void setData(String name, double birthDay, double today) {
		this.name = name;
		this.birthDay = birthDay;
		this.today = today;
	}
	
	
}







package java01.ex5;

public class ex5{  //(1)  >    (2)myobj2.getStuName()   (3) String name
   public static void main(String args[]){
   
       StudentData myobj1 = new StudentData(1,"YeonjungBae",23);
       System.out.println("Student Name is: "+myobj1.getStuName());
       System.out.println("Student Age is: "+myobj1.getStuAge());
       
       StudentData myobj2 = new StudentData(2, "SujiBae", 21);
       System.out.println("Student Name is: "+myobj2.getStuName());
       System.out.println("Student Age is: "+myobj2.getStuAge());
   
       StudentData myobj3 = new StudentData(3, "DoonaBae", 36);
       System.out.println("Student Name is: "+myobj3.getStuName());
       System.out.println("Student Age is: "+myobj3.getStuAge());
       
       System.out.println("나이 제일 많은 사람은...");
       	
       	if(myobj1.getStuAge() [(1)___] myobj2.getStuAge()){
       			if(myobj1.getStuAge() > myobj3.getStuAge()){
       				System.out.println(myobj1.getStuName());
       			} else System.out.println(myobj3.getStuName());
           } else {
        	   		if(myobj2.getStuAge() > myobj3.getStuAge()){
        	   			System.out.println([(2)____]);
        	   		} else System.out.println(myobj3.getStuName());   		
           	}
     
    }
}



package java01.ex5;

public class StudentData
{
   private int stuID;
   private String stuName;
   private int stuAge;

   StudentData(int id,[(3)____], int age)
   {
 
       this.stuID = id;
       this.stuName = name;
       this.stuAge = age;
   }

   public int getStuID() {
       return stuID;
   }
   public String getStuName() {
       return stuName;
   }
   public int getStuAge() {
       return stuAge;
   }
   
}

package java01.ex6;

public class ex6 { //(1)Cube(@,@,@)    (2)Cube(@,@)   (3)1000    (4)6000

	public static void main(String[] args) {
		Cube cubeObj1= new Cube();
		Cube cubeObj2 = new Cube(10, 20, 30);
		System.out.println("Volume of Cube1 is : " + 					                 	           cubeObj1.getVolume());//1000
		System.out.println("Volume of Cube2 is : " + 			                       		                       cubeObj2.getVolume());//6000
	}
}


package java01.ex6;

public class Cube {

	int length;
	int breadth;
	int height;
	public int getVolume() {
		return (length * breadth * height);
	}
	Cube() {
		this(10, 10);
		System.out.println("Cube()");
	}
	Cube(int l, int b) {
		this(l, b, 10);
		System.out.println("Cube(@,@)");
	}
	Cube(int l, int b, int h) {
		length = l;
		breadth = b;
		height = h;
		System.out.println("Cube(@,@,@)");
}

/* 문제는 요기있어요~~~~~~~~출력될 결과를 작성하세요
[(1)_______]
[(2)_______]
Cube()
Cube(@,@,@)
Volume of Cube1 is : [(3)_____]
Volume of Cube2 is : [(4)_____]
*/





————————————————————————————————————————————————————————————


1.       
    사람의 정보를 입력하는 코드이다.
    다음 코드의 인스턴스 생성  위치와  console창처럼 출력 할 수 있도록 빈칸을 채우시오.

답 => (1)  ㉡  ,  (2) phone != null

class personInfo {
  String name;
  int age;
  String phone;

 ㉠ personInfo(String name) {this.name = name; }
 ㉡ personInfo(String name, int age) {this.name = name;  this.age = age; }
 ㉢ personInfo(String name, int age, String phone) {this.name = name; this.age = age; this.phone = phone;}
 
 void print(){
	System.out.println("=-=-=-=-=-=-=-=-=");
	System.out.println("name:" + name);
	if(age != 0)
  	System.out.println("age:" + age);
	if(             )             <===============(2)여기(조건)
  	System.out.println("phone:" + phone);
	}
  }

public class exam01 {
  public static void main(String[] args) {
	personInfo p1 = new personInfo("홍길동");
	personInfo p2 = new personInfo("임꺽정", 30);       <===============(1)여기(ㄱ,ㄴ,ㄷ 위치)
	personInfo p3 = new personInfo("김철수", 40, "01012345678");
   	
p2.print();
 }
}



실행결과

=-=-=-=-=-=-=-=-=
name: 임꺽정
age: 30




	•	다음코드는 간단한 은행 입출금 소스이다.
 	개설한 통장에  처음에는 10,000만원 두 번째는 25,000원을 입금하여 다음과 같이                        출력하려면 빈칸의 올바른 소스는?. 

답 => this.통장잔액 +=  입금;

class 은행 {
  String 이름;
  int 통장잔액 = 0;

  은행(String 이름) {
	this.이름 = 이름;
	System.out.println("통장 개설");
  }
 
  void 입금(int 입금) {
	(                           )               <===============여기(연산)
  }

  void 출금(int 출금) {
	this.통장잔액 -= 출금;
  }

  void 출력() {
	System.out.println("이름:" + 이름);
	System.out.println("통장잔액:" + 통장잔액);
  }
}

public class exam02 {

  public static void main(String[] args) {

	은행 우리 = new 은행("사용자");    
	우리.입금(10000);
	우리.입금(25000);
	우리.출력();
  }
}
실행결과
통장 개설
이름:사용자
통장잔액:35000


	•	로또번호를 수동으로 입력하는 코드이다.
파일을 실행하고 다음과 같이 입력하여 
번호:10
번호:11
번호:12
번호:13
번호:14
번호:15
최종적으로 
10,11,12,13,14,15,입니다 
위처럼 출력하려면 빈칸에 알맞은 값은?
답 =>  (1) for(int e: number)  
           (2) Lotto l = new Lotto();

import java.util.Scanner;

class Lotto {
  int count = 0;
  int[] number = new int[6];

  void manual() {
	Scanner scan = new Scanner(System.in);

  	while(count < 6){
 	System.out.print("번호:");
 	number[count] += Integer.parseInt(scan.nextLine());
  	count++;
  	} 

  	 (                                            )  <===============(1)여기 (반복문)
  	System.out.print(e+",");
 	 
  	System.out.print("입니다.");
  }
}

public class exam03 {

  public static void main(String[] args) {

	(                                   )               <===============(2)여기 (생성자)
	l.manual();   
  }
}

	•	다음코드의 출력 값은?

답 : 3번

class Inst{
 
  static int instNum = 0;
 
  public Inst(){
	instNum++;
	System.out.println("인스턴스 생성:" + instNum);
  }
}

public class exam04 {
  public static void main(String[] args) {
	Inst i1 = new Inst();
	Inst i2 = new Inst();
	Inst i3 = new Inst();
  }
}
1.
인스턴스 생성:1
인스턴스 생성:1
인스턴스 생성:1

2.
인스턴스 생성:0
인스턴스 생성:0
인스턴스 생성:0

3.
인스턴스 생성:1
인스턴스 생성:2
인스턴스 생성:3


4.
인스턴스 생성:0
인스턴스 생성:1
인스턴스 생성:2

5.
인스턴스 생성:3
인스턴스 생성:3
인스턴스 생성:3

            
class Triangle{
  double bottom;
  double height;
 
   public Triangle(double bt, double hg){
	this.bottom = bt;
	this.height = hg;
  }
 
  public void setBottom(double bt){
	this.bottom = bt;
  }
 
 public  void setHeight(double hg){
	this.height = hg;
  }
 
 public double getArea(){
	(             )  bottom * height / 2;
  }
}

public class exam05 {

  public static void main(String[] args) {
    
	Triangle tr = new Triangle(10.2, 15.2);
	System.out.println("삼각형의 넓이 : " + tr.getArea());
    
	tr.setBottom(7.2);
	System.out.println("삼각형의 넓이 : " + tr.getArea());
  }
}
실행결과
삼각형의 넓이 : 77.52
삼각형의 넓이 : 54.72

	•	다음 코드는 
밑변과 높이 정보를 생성과 동시에 초기화가 가능하다.
밑변과 높이 정보를 변경시킬 수 있는 메서드와 삼각형의 넓이를 계산해서 반환하는 메소드를 갖고 있다.

빈칸에 알맞은 값을 채우시오. return


 
	•	빈칸의 알맞은 값을 채우시오
-println 메서드와 print 메서드는 문자열이 아닌 인스턴스의 참조 값이 전달되면, 
해당 인스턴스의 (            )메서드를 호출하여, 이 때 반환되는 문자열을 출력한다.
답 = > toString

class Friend{
  String myName;
  public Friend(String name){
	myName = name;
	}
 
  public String toString(){
	return "제 이름은 "+myName+"입니다.";
	}
  }
 
public class exam06 {
  public static void main(String[] args) {
	Friend fnd1 = new Friend("동한");
	Friend fnd2 = new Friend("형진");
    
	System.out.println(fnd1);
	System.out.println(fnd2);
    
	System.out.println("출력이 종료되었습니다.");
  }
}

실행결과
제 이름은 동한입니다.
제 이름은 형진입니다.
출력이 종료되었습니다.









	•	문자열의 길이 반환 
빈칸의 알맞은 값은?

답 = 16, 12
public class exam08 {

  public static void main(String[] args) {

	java.lang.String str = "My name is sunny";
	int strLen1 = str.length();
	System.out.println("길이 1:" +  strLen1);
    
	int strLen2 = "한글의 길이는 어떻게?".length();
	System.out.println("길이 2:" +  strLen2);

  }
}

길이 1: (         )
길이 2: (         )







	•	다음 설명과 같도록 빈칸을 채우시오.
사과장수가 있다.
사과의 개수와 보유금액은 본인만 알아야하며 
사과의 가격은 모두가 알고있다.

답 = private,   static,  private


class 사과장수 {
  (              )  int 사과개수;
  (              )  int 사과가격;
  (              )  int 보유금액;

  사과장수(int 사과개수, int 사과가격  int 보유금액) {
	this.사과개수 = 사과개수;
	this.사과가격 = 사과가격;
	this.보유금액 = 보유금액;
  }
}








	•	콘솔의 입력과 출력에 대한 코드이다.
            빈칸을 채우시오.

답 = Scanner

import java.util.Scanner;

public class exam10 {

  public static void main(String[] args) {
 
	(            )  sc = new (            ) (System.in);
    
	int num1 = sc.nextInt();
	int num2 = sc.nextInt();
	int num3 = sc.nextInt();
	int sum = num1 + num2 + num3;
    
	System.out.printf("입력된 정수 %d, %d, %d의 합은 %d \n",
    	num1, num2, num3, sum);
  }

}








	•	양수이면서 짝수 찾기
	빈칸에 알맞은 답을 쓰시오

답  num1 > 0 && (num1 %2) ==0
 

import java.util.Scanner;

public class exam10 {

  public static void main(String[] args) {
 
	Scanner sc = new Scanner(System.in);
    
	int num1 = sc.nextInt();
 
    
  	if(                          ){                <===============여기
    	System.out.println("양수이면서 짝수");
  	}   	 
  }

}



———————————————————————————————————————————


1. 콘솔창에 출력되는 프로젝트 이름은?		답)	자바project 참여로 수입증가, 경력쌓음
2. 콘솔창에 마지막으로 출력되는 총수입(avgIncome)은?		답) 106
3. 변수 projectCareer 는 몇일까?		답)	1

public class Min1 {
	String name = "성희";
	String job = "개발자";
	int avgIncome = 100;
	int projectCareer;
	
	public static void main(String[] args) {
		Min1 Sh = new Min1();
		Sh.participateProject("자바");
		Sh.instruct(5);
	}
	public void participateProject(){
		System.out.println("프로그램 개발로 수입증가. 경력쌓음");
		avgIncome++;
		projectCareer++;
		System.out.println("총수입 = "+avgIncome);

	}
	public  void participateProject(String project){
		System.out.println(project +" project 참여로 수입증가, 경력쌓음");
		avgIncome++;
		projectCareer++;
		System.out.println("총수입 = "+avgIncome);
	}

	public void instruct(){
		System.out.println("강의를 통한 수입증가");
		avgIncome++;
		System.out.println("총수입 = "+avgIncome);
	}
	
	public void instruct(int lectureNum){
		System.out.println(lectureNum+ " 개 강의를 통한 수입증가");
		avgIncome = avgIncome + lectureNum;
		System.out.println("총수입 = "+avgIncome);
	}
	
}


4. 빈칸을 채우세요.		답) Min2

public class Min2 {
	public [     ](){
		System.out.println("나는 생성자");
	}

	public static void main(String[] args) {
		System.out.println("위의 [    ]는 생성자이다. 굳이 만들지 않아도 생성되는 메소드로 빈칸에 들어갈 답은?");

	}

}

5. 1.[    ]안의 3줄의 출력문을 쓰세요 	답 -> 나는 생성자
					      name : 성희
					      javaLevel : 0
6. 2.[    ]안의 3줄의 출력문을 쓰세요 	답 -> String받는 생성자
					      name : 성희
					      javaLevel : 0
7. 3.[    ]안의 3줄의 출력문을 쓰세요 	답 -> 둘다 받는 생성자
					      name : 성희
					      javaLevel : 4
8. 4.[    ]안의 3줄의 출력문을 쓰세요 	답 -> int받는 생성자
					      name : null
					      javaLevel : 5
public class Min3 {
String name;
int javaLevel;

public Min3(){
	System.out.println("나는 생성자");
	name = "성희";
	javaLevel = 0;
}
public Min3(String str){
	System.out.println("String받는 생성자");
	name = str;
}
public Min3(int i){
	System.out.println("int받는 생성자");
	javaLevel = i;
}
public Min3(String str, int i){
	System.out.println("둘다 받는 생성자");
	name = str;
	javaLevel = i;
}
public String getName(){
	return name;
}
public int getJavaLevel(){
	return javaLevel;
}
	public static void main(String[] args) {
		Min3 i = new Min3();
	1.[	System.out.println("name : "+i.getName());              ]
		System.out.println("javaLevel : "+i.getJavaLevel());
		
		Min3 i2 = new Min3("성희");
	2.[	System.out.println("name : "+i2.getName());             ]
		System.out.println("javaLevel : "+i2.getJavaLevel());
		
		Min3 i3 = new Min3("성희",4);
	3.[	System.out.println("name : "+i3.getName());             ]
		System.out.println("javaLevel : "+i3.getJavaLevel());
		
		Min3 i4 = new Min3(5);
	4.[	System.out.println("name : "+i4.getName());             ]
		System.out.println("javaLevel : "+i4.getJavaLevel());
		
	}

}


9. 9.[   ]안에 인스턴스를 생성하여 다음 은행 연산을 하려한다 인스턴스를 생성하는 방법을 고르시오.
	1. Bank b = Min4 b();
	2. Min4 b = new();
	3. Bank b = new Bank();
	4. Min4 b = new Min4();
	5. Min4 b = new Min4;
10. 10.[   ] 생성한 인스턴스가 잘 들어갔나 확인하고자 출력하는 문구를 쓰시오
	답 b.displayMoney();
	

public class Min4 {
	int money;
	int command;
	String bankName;
	String customerName;
	
	public Min4(){
	}
	public Min4(String s1, String s2){
		bankName = s1;
		customerName =s2;
	}
	public Min4(String s1, String s2, String s3){
		bankName = s1;
		customerName =s2;
		command = Integer.parseInt(s3);
	}
	public void deposit(int i){
		money = money +i;
		System.out.println(money + "원 입금함.");
	}
	public void displayMoney(){
		System.out.println("현재금액은 : "+money+"입니다.");
	}
	
	public static void main(String[] args) {
		9.[                              ]
		10.[                              ]
	}

}



—————————————————————————————————————————————————————————————————————


	•	아래의 소스코드를 보고 에러가 발생하는 문장을 골라주세요. 답) 1,3
package test01;
class Employee{
	private String name;
	private int salary;
	int age;
	
	public Employee(String name, int age, int salary){
		this.name = name;
		this.age = age;
		this.salary = salary;
	}
	public String getName(){
		return name;
	}
	private int getSalary(){
		return salary;
	}
	int getAge(){
		return age;
	}
}
public class Test01 {
	

	public static void main(String[] args) {
		Employee e1 = new Employee("홍길동",25,3000);
	•	e1.salary= 300;
	•	e1.age=26;
	•	int salary = e1.getSalary();
	•	String s = e1.getName();
	•	int age1 = e1.getAge();
		

	}

}



	•	다음 소스코드를 보고 출력 결과를 적어주세요.
           (String.format("%20d:%20d:%20d", hour, minute, second); 의 결과는 만약 hour =2, minute=2, second=2 일 때 출력 결과는 02:02:02로 출력 된다.)
정답 : 
 생성자 호출 후 시간 : 13:27:06
올바르진 않은 시간 설정 후 시간 : 00:00:00
----------------------------------------------------------------------------------------------------------------
package test01;
class Time{
  private int hour; //0~23
  private int minute;// 0 ~ 59
  private int second;// 0 ~ 59
  
  public Time(){
    this(0,0,0);
  }
  public Time(int h, int m, int s){
    setTime(h,m,s);
  }
  public void setTime(int h, int m, int s){
    hour = ((h >= 0 && h <24) ? h: 0);
    minute = ((m >= 0 && m <59) ? m: 0);
    second = ((s >= 0 && s <24) ? s: 0);
  }
  public String toString() {
    return String.format("%20d:%20d:%20d", hour, minute, second);
  }
}
public class Test02 {
  
  public static void main(String[] args) {
  
   Time time2 = new Time(13, 27, 6);   
   System.out.print(" 생성자 호출 후 시간 : " );
   System.out.println(time2.toString());
   
   Time time3 = new Time(99, 66, 77);   
   System.out.print("올바르진 않은 시간 설정 후 시간 : " );
   System.out.println(time2.toString());
   
  }
}
----------------------------------------------------------------------------------------------------------------------
3.아래의 소스 코드를 보고 빈칸에 들어갈  것으로 보기를 고르세요.  답) 3,4

--------------------------------------------------------------------------------------------------------------
package test01;

class Television{
  String brand;  
  void setBrand( (빈칸1) b){
  brand = b;
  }
  
  String getBrand(){
    return brand;
  }
  String getManufacturer(Television t){
    return t.getBrand() + "Electronice";
  }
}
public class Test03 {

  public static void main(String[] args) {
    (빈칸 2) t= new Television();
    t.setBrand("samsung");
    String b = t.getBrand();
    (빈칸 2) t2= new Television();
    System.out.println(t2.getManufacturer(t));  
  }
}
--------------------------------------------------------------------------------------------------------------
	•	char
	•	int
	•	String
	•	Television
	•	Test03.



4. 다음 소스 코드는 날짜를 출력하는 함수이다. 출력 결과를 선택하여 주세요. 답)1,4
--------------------------------------------------------------------------------------------------
package test01;
class Date{
  private int year;
  private String month;
  private int day;
  
  public void setDate(int y, String m, int d){
    month = m;
    day = d;
    year = y;   
  }
  public void printDate(){
    System.out.println(year + "년 " + month + " " + day + "일");
  }
  public int getYear(){    return year;    }
  public void setYear(int y){         year = y;      }
  public String getMonth(){    return month;  }
  public void setMonth(String m){    month = m;    }  
}
public class Test04 {
  public static void main(String[] args) {
    Date date = new Date();
    date.setDate(2014, "10월", 19);
    date.printDate();
    date.setYear(2015);
    date.printDate();  
  }
}
--------------------------------------------------------------------------------------------------
	•	2014년 10월 19일
	•	2014년 10 19일
	•	2014 10 19
	•	2015년 10월 19일
2015년 

	•	소스 코드 안에 있는 번호와 보기의 출력 결과가 다른 것을 선택 하세요. 답)2,5

---------------------------------------------------------------------------------------------------------
package test01;

public class Test05 {
  public static void main(String[] args) {

    int i;
    double f;
    
    f=5/2;
	•	 System.out.println(f);
    f = (double)5/2;
	•	 System.out.println(f);
    f = 5 / (double)2;
	•	System.out.println(f);
    f = (double)5 / (double)2;
	•	System.out.println(f);
    i = (int )1.3 + (int)1.8;
	•	System.out.println(i);

  }

}
---------------------------------------------------------------------------------------------------------
	•	2
	•	2
	•	2.5
	•	2.5
	•	3
    




	•	다음 소스 코드를 보고 출력 결과를 작성해 주세요.
(단 String.format("%s %s",a,b)은 문자열 두 개의 변수를 출력 한다는 뜻이다.
예를 들어 String a=”이렇게”; String b=”출력한다.”;
String.format(“%s %s”,a,b);인 경우에는 출력 결과는 아래와 같다.
이렇게 출력한다.)
정답) 길동 홍
-----------------------------------------------------------------------------------------------------------------
package test01;
class Person{
  String lastName;
  String firstName;
  
  String getLastName(){
    return lastName;
  }
  String getFirstName(){
    return firstName;
  }
  public Person(String lastName, String firstName){
    this.lastName = lastName;
    this.firstName = firstName;
  }
  public String buildName(){
    return String.format("%s %s", this.getFirstName(),this.getLastName());
  }
  
}
public class Test06 {
  

  public static void main(String[] args) {
    Person person = new Person("홍","길동");
    System.out.println(person.buildName());
  }

}

-----------------------------------------------------------------------------------------------------------------



	•	아래의 소스코드를 보고 빈칸에 들어갈 명령어를 모두 골라주세요.
------------------------------------------------------------------------------------------------------------
package test01;
class Car{
  private int speed;
  public void setSpeed(int s){
   (빈칸1) speed =s;
    System.out.println("정수 버전 호출");      
  }
  public void setSpeed(double s)  {
    (빈칸1)speed = (int)s;
    System.out.println("실수 버전 호출");
    
  }
}
public class Test07 {
  public static void main(String[] args) {
    Car myCar=new (빈칸2);
    
    myCar.setSpeed(100);
    myCar.setSpeed(79.2);
  } 

}

------------------------------------------------------------------------------------------------------------
	•	생략가능
	•	This.
	•	this.
	•	Car
Car()
	•	소스코드를 보고 결과를 작성하세요.
정답) 
현재 상태는 켜짐
현재 상태는 꺼짐
---------------------------------------------------------------------------------------------------------------
package test01;
class DeskLamp{
  private boolean isOn;
  public void turnOn(){
    isOn= true;
  }
  public void turnOff(){
    isOn = false;
  }
  public String toString(){
    return "현재 상태는" + (isOn == true ? "켜짐": "꺼짐");
  }
}
public class Test08 {

  public static void main(String[] args) {
    DeskLamp myLamp = new DeskLamp();
    myLamp.turnOn();
    System.out.println(myLamp.toString());
    myLamp.turnOff();
    System.out.println(myLamp.toString());
    
  }

}


---------------------------------------------------------------------------------------------------------------



9.다음의 소스코드중 에러가 나타는 소스코드는?
--------------------------------------------------------------------------------------------------
package test01;
class BankAccount{//은행 계좌
  int accountNumber;//계좌번호
  int balance; // 잔액을 표시하는 변수
  
  void deposit(int amount){ //저금
    balance += amount;
  }
  void withdraw(int amount) { //인출
    balance -= amount;
  }
	•	public void toString(){
    return "현재잔액은" + balance +"입니다.";
  }
}
public class Test09 {

  public static void main(String[] args) {
	•	BankAccount myAccount =new BankAccount();

	•	myAccount.deposit(10000);
	•	System.out.println(myAccount.toString());
    myAccount.withdraw(8000);
	•	System.out.println(myAccount);

  }

}


--------------------------------------------------------------------------------------------------



	•	아래의 소스를 보고 출력 결과로 맞는 것을 고르세요
답) 속도 : 110주행거리 : 0색상 : white
-------------------------------------------------------------------------------------------------------
package test01;
class CarInfo{
  public int speed;
  public int mileage;
  public String color;
  public void speedUp(){
    speed += 10;
  }
  public void speedDown(){
    speed -= 10;
  }
  public String toString(){
    return "속도 : "+ speed +"주행거리 : " + mileage +"색상 : " + color; 
  }
}
public class Test10 {
  public static void main(String[] args) {
    
    CarInfo myCar = new CarInfo();
    CarInfo yourCar = new CarInfo();
    
    myCar.speed = 60;
    myCar.mileage = 0;
    myCar.color = "blue";
    
    yourCar.speed = 120;
    yourCar.mileage = 0;
    yourCar.color = "white";
    
    yourCar.speedDown();
    System.out.println(yourCar.toString());
  }
}


-------------------------------------------------------------------------------------------------------






1. 간단한 프로그램입니다.콘솔창의 결과를 예측해 보세요.




class Calculator {
	static int result =0;
	Calculator(int a){
		result =a;
	}
	
	Calculator(int a, int b) {
		result =result + a + b;
	}

	void display() {
		System.out.println(result);
	}
}

public class Osil {

	public static void main(String[] args) {

		Calculator cal1 = new Calculator(5);
		Calculator cal2 = new Calculator(10,20);
		cal1.display();
	}
}




답 35



Osil.java 파일의 소스 코드 입니다. 컴파일이 되도록 틀린 부분을 모두 고쳐주세요.


public class Calculator {
	int result =0;
	
	Calculator(int a){
		result =a;
	}
	
	Calculator(int a, int b) {
		result =result + a + b;
	}

	void display() {
		System.out.println(result);
	}
}

public class Osil {

	public static void main(String[] args) {

		Calculator cal1 = new Calculator(5);
		Calculator cal2 = new Calculator(10,20);
		cal1.display();
		cal2.display();
	}
}



답 : 	1.첫줄에 public 을 빼야한다. 같은 파일안에 public 클레스는 하나.

 



Osil.java 파일의 소스 코드 입니다. 컴파일이 되도록 틀린 부분을 모두 고쳐주세요.

class Shop{
	
	String dog="멍멍";
	String cat="키약";
	String ori="꿱괡괙";
	
	void voice(String x) {
		System.out.println(x);
	}
}


public class Ori {

	public static void main(String[] args) {

		Shop shop = new Shop();
		shop.voice(shop.ori);

	}
}

답 : public 클레스의 이름을 Ori로 고쳐야한다.





Osil.java 파일의 소스 코드 입니다.  결과 값을 예측해주세요!


class Shop{
	
	String dog="멍멍";
	String cat="키약";
	String ori="꿱괡괙";
	
	void voice(String x) {
		System.out.println(x);
	}
}


public class Osil {

	public static void main(String[] args) {

		Shop shop = new Shop();
		
		shop.voice(shop.ori);

	}
}

답 : 꿱괡괙





Osil.java 파일의 소스 코드 입니다.  결과를 예측해 주세요!

class Shop{
	
	String dog="멍멍";
	String cat="키약";
	String ori="꿱괡괙";
	
	String voice(String x) {
		return x;
	}
}
public class Osil {

	public static void main(String[] args) {

		Shop shop1 = new Shop();
		Shop shop2 = new Shop();

		if(shop1.voice(shop1.ori)==shop2.voice(shop2.ori)){
			System.out.println("같은 소리 입니다.");
			if(shop1.ori==shop2.ori){
				System.out.println("같은 동물입니다.");
			}else{
				System.out.println("다른 동물입니다.");
			}
			
		}else{
			System.out.println("다른 소리 입니다.");
			if(shop1.ori==shop2.ori){
				System.out.println("같은 동물입니다.");
			}else{
				System.out.println("다른 동물입니다.");
			}
		}
	}
}


답

같은 소리 입니다.
같은 동물입니다.
다음중 컴파일 에러 나는 곳을 모두 찾아 바르게 고치세요.


class Shop{
	String pet;
	void grrrrr(String val){
		Shop this;
		this.pet=val;
	}
}


public class Osil {

	public static void main(String[] args) {

		Shop shop = new Shop();
	}
}




답 Shop this; 빼야한다.






Osil.java 파일의 소스 코드 입니다.  틀린 부분을 고쳐주세요!


class Pet{
	String name,grrr;
	int age,weight;
	Pet(String name,int age,int weight,String grrr){
		this.name=name;
		this.age=age;
		this.weight=weight;
		this.grrr=grrr;
	}
	
	void eat(){
		System.out.println(name+"이가 맛있게 먹고있어요");
	}
}

public class Osil {

	public static void main(String[] args) {

		Pet dog = Pet("호랭이",1,90,"으르렁");
		Pet fox = Pet("여우",2,14,"멍멍멍");
		dog.eat();
		fox.eat();
	}
}






Osil.java 파일의 소스 코드 입니다.  결과를 정확히 적어 주세요.


package osil;


class Pet{
	String name,grrr;
	int age,weight;
	Pet(String name,int age,int weight,String grrr){
		this.name=name;
		this.age=age;
		this.weight=weight;
		this.grrr=grrr;
	}
	
	void eat(){
		System.out.println(name+"가 맛있게 먹고있어요");
	}
}

public class Osil {

	public static void main(String[] args) {

		Pet dog = new Pet("호랭이",1,90,"으르렁");
		Pet fox = new Pet("여우",2,14,"멍멍멍");
		dog.eat();
		fox.eat();
	}
}


답

호랭이가 맛있게 먹고있어요
여우가 맛있게 먹고있어요






9.간단한 프로그램입니다.콘솔창의 결과를 예측해 보세요.




class Calculator {
	static int result =0;
	Calculator(int a){
		result =a;
	}
	
	Calculator(int a, int b) {
		result =result + a + b;
	}

	void display() {
		System.out.println(result);
	}
}

public class Osil {

	public static void main(String[] args) {

		Calculator cal1 = new Calculator(5);
		Calculator cal2 = new Calculator(10,20);
		cal1.display();
		cal2.display();
	}
}




답 
35
5




다음중 컴파일 에러 나는 곳을 모두 찾아 바르게 고치세요.


class Shop{
	String pet;
	void grrrrr(Shop this,String val){
		Shop this;
		this.pet=val;
	}
}


public class Osil {

	public static void main(String[] args) {

		Shop shop = new Shop();
	}
}




답 Shop this 빼야한다.



——————————————————————————————————————


1. 다음 소스에서 명시적 형변환이 되지 않는 명령어와 출력값이 다른 명령어 옳게 고른것은? 4
  
    byte b = 127;
    short s = 127;
    int i = 127;
    float f = 127.9f;
    double d = 127.90;
    long l = 127L;
    char c = 'A';
    boolean boo = true;

    byte b2 = b;
    byte b3 = (byte)s;
    byte b4 = (byte)i;
    byte b5 = (byte)f;
    byte b6 = (byte)l;
    byte b7 = (byte)c;
    byte b8 = (byte)boo;

    System.out.println(b2);
    System.out.println(b3);
    System.out.println(b4);
    System.out.println(b5);
    System.out.println(b6);
    System.out.println(b7);
    System.out.println(b8);
 
 

1. 형변환이 되지 않는 명령어 : byte b7 = (byte)c;

   출력값이 다른 명령어 : System.out.println(b7);

2. 형변환이 되지 않는 명령어 : byte b7 = (byte)c;

   출력값이 다른 명령어 : System.out.println(b5);

3. 형변환이 되지 않는 명령어 : byte b8 = (byte)boo;

   출력값이 다른 명령어 : System.out.println(b6);

4. 형변환이 되지 않는 명령어 : byte b8 = (byte)boo;

   출력값이 다른 명령어 : System.out.println(b7);

5. 형변환이 되지 않는 명령어 : byte b6 = (byte)l;

   출력값이 다른 명령어 : System.out.println(b8); 

===============================================================================================

[2 ~ 5번 문제] 다음 소스를 실행 할때 아래의 출력 예시와 같도록 빈칸을 채우시오.

예) 인자값을 2개를 주었을때
실행 예) 홍길동 한미은행
	<<출력결과>>
	 홍길동님의 주거래은행은 한미은행 입니다.
	 현재금액은 0원 입니다.

예) 인자값을 3개를 주었을때
실행 예) 홍길동 한미은행 1000
	<<출력결과>>
	 홍길동님의 주거래은행은 한미은행 입니다.
	 현재금액은 1000원 입니다.


<<소스>>

package test;

public abstract class Bank {  //abstract는 추상클래스

	private String name;
		
	public Bank(){}

	public Bank(String name){
		this.name = name;
	}
	
	public abstract void display();
	
	public String getName(){
		return name;
	}

	public void setName(){
		this.name = name;
	}
}


package test;

public class Bank01 {
	
	int money;
	int command;
	String bankName;
	String customerName;

	public Bank01() {}
	
	
	public Bank01((2번문제),(3번 문제){
		bankName = s1;
		customerName = s2;
	}

	public Bank01(String s1, String s2, String s3){
		bankName = s1;
		customerName = s2;
		command = (4번 문제);
	}
	
	public void deposit((5번 문제){
		money = money + i;
		System.out.println(money+"원 입금함");;
	}

	public void displayMoney(){
		System.out.println("현재 금액은 :"+ money + "입니다.");
	}
	
	
	public static void main(String[] args) {
		if(args.length<2){
			System.out.println("인자값이 최소2개가 필요합니다.");
			System.exit(0);
		}
		
		System.out.print(args[0]+ "님의 주거래 은행은" + args[1]+ "입니다.");
		Bank01 b = new Bank01();
		
		switch(args.length){
		case 2:
			b = new Bank01(args[0], args[1]);
			break;
		case 4: 
			b = new Bank01(args[0], args[1], args[2]);
			b.deposit(Integer.parseInt(args[3]));
			break;
			default:
				System.out.println("인자갑이 잘못 입력되었습니다.");
				break;
		}

	}

}


2. 빈칸을 채우시오. String s1
3. 빈칸을 채우시오. String s2
4. 빈칸을 채우시오. Integer.parseInt(s3)
5. 빈칸을 채우시오. int i

===============================================================================================

6.다음 중 형변환을 생략할 수 있는 것을 모두 고르시오? 4,5

byte b = 10;
char ch = 'A';
int i = 100;
long l = 1000L;
	
	
1). b = (byte)i;
2). ch = (char)b;
3). short s = (short)ch;
4). float f = (float)l;
5). i = (int)ch;
	 
===============================================================================================


7. 다음 소스코드의 실행 결과로 옳은 것을 고르시오. 4

public class Samp{
	int id;
	public Samp(int x) {this.id = x;}
	public void set(int x) {this.id = x;}
	public int get() {return this.id;}

	public static void main(String[] args){
	Samp ob1 = new Samp(3);
	Samp ob2 = new Samp(4);

	s = ob2;
	ob1 = ob2;
	System.out.println("ob1.id=" + ob1.id);
	System.out.println("ob2.id=" + ob2.id);
	}
}


1). ob1.id = 3;
    ob2.id = 4;

2). ob1.id = 4;
    ob2.id = 3;

3). ob1.id = 3;
    ob2.id = 3;

4). ob1.id = 4;
    ob2.id = 4;

5). ob1.id = 7;
    ob2.id = 7;


===============================================================================================

[8~ 10] 다음 소스를 보고 아래 질문에 답하시오.
public class Book {
	String title;
	String author;
	int ISBN;
	
	public Book(String title, String author, int ISBN){
		this.title = title;
		this.author = author;
		this.ISBN = ISBN;
		System.out.println(title +" " +author+" " + ISBN);
	}
	
	public Book(String title, int ISBN){
		this(title, "Anonymous", ISBN);
	}
	
	public Book(){
		this(null, null, 0);
		System.out.println("생성자가 호출되었음");
	}

	public static void main(String[] args) {
		Book javaBook = new Book("Java JDK", "홍길동", 1111);
		Book holyBible = new Book("Holy Bible", 1);
		Book emptyBook = new Book();

	}

}


8. Book javaBook = new Book("Java JDK", "홍길동", 1111); 의 실행결과를 적으시오. Java JDK 홍길동 1111
9. Book holyBible = new Book("Holy Bible", 1); 의 실행 결과를 적으시오.  Holy Bible Anonymous 1
10. Book emptyBook = new Book();의 실행 결과를 적으시오.  null null 0
 							  생성자가 호출되었음








—————————————————————————————————————————————————————


< 캡슐화 >


다음은  계산기를 작성하는 코드이다.  결과 값에 바로 접근을 못하게 하기 위해 코드를 짜고 아래와 같은 출력 결과를 얻고 싶을 때 빈칸을 채우시오.  

<출력결과>
c1의 결과 값: 10
c2의 결과 값: -5

public class Test {
   public static void main(String[] args){
       Constructor c1 = new Constructor();
       Construcotr c2 = new Constructor();

        c1.plus(10);
        c2.minus(5);

        System.out.println(“c1의 결과 값: ” +       (1)       );
        System.out.println(“c2의 결과 값: ” +       (2)        );
   } 
}

public class Calculator(){

        (3)      int result;

   int getResult(int value){
         return this.result = value;
   }

   void plus(int value){
         this.result += value;
    }

   void minus(int value){
         this.result -= value;
    }

}

                        )   
                        e
                        w
c1.getResult()       2)  c2.getResult()          3) private


< 형변환 >
2.다음 코드의 출력 결과를 써넣으시오(단, 에러가 나도 실행된다고 가정한다. 에러가 나는 곳은 에러라고 쓰시오.)

public class Test{
   public static void main(String[] args){
      byte b1 = 3;
      byte b2 = 4;
      short sh = 2;
      float  f = 30.0f;
      double d = 40;
      char ch = 'A';
      String st = "자바63기";

      System.out.println("1번: " +  (b1 + sh) );   // 1)번
      System.out.println("2번: " +  b1 + sh);      // 2)번
      System.out.println("3번: " +  (b1 + b2) );  // 3)번
      System.out.println("4번: " +  b1 + b2 );     // 4)번
      System.out.println("5번: " + st - ch ) ;       // 5)번
      System.out.println("6번: " +  (st - ch) );     // 6)번
      System.out.println("7번: " +  d + f );          // 7)번

   }
}    


                        )   
                        )   
                        )   
                        )   
                        )   
                        )   







5   2)  32   3) 7   4) 34    5)  error  6) error   7) 40.030.0


< 조건문 >
다음 코드의 빈칸을 채워 넣으시오.
import java.util.Scanner;
public class Test02 {
	public static void main(String[] args) {
		int max = 0, mid = 0, min = 0;
		Scanner nums = new Scanner(System.in);
		
		System.out.println("비교할 숫자 3개를 입력: ");	
		int num1 = nums.nextInt();
		int num2 = nums.nextInt();
		int num3 = nums.nextInt();
		
		if((num1 >= num2) && (num1 >= num3)){
			max =      (1)     ;
			if(num2 >= num3){
				mid =      (3)     ;
				min =      (2)     ;
			}else{
				mid =      (2)     ;
				min =      (3)     ;
			}		
		}else if((num2 >= num1) &&  (num2 >= num3)){
			max =      (3)     ;
			if(num1> num3){
				mid =      (1)     ;
				min =      (2)     ;
			}else{
				mid =      (2)     ;
				min =      (1)     ;
			}
		}else if((num3 >= num1) && (num3 >= num2)){
			max =      (2)     ;
			if(num1 >= num2){
				mid =      (1)     ;
				min =      (3)     ;
			}else{
				mid =      (3)     ;
				min =      (1)     ;
			}
		}
		System.out.println(max + “ >= ” + “mid” + “ >= ” + min);
	}
}
                        )       2)                         )          3)                         )   
1) num1 2) num3 3)num2







< 캡슐화 & 오버로딩 >
다음 코드의 결과물이 아래와 같을 때, 빈칸을 채우시오

이름: 홍길동
군번호: m880101
이름: 성춘향
군번호: 해당없음

public class Test01 {
	public static void main(String[] args) {
		
		Person p1 = new Person("홍길동", "m880101");
		Person p2 = new Person("성춘향");

		System.out.println("이름: " + p1.getName());
		System.out.println("군번호: " + p1.getmId());
		
		System.out.println("이름: " + p2.getName());
		System.out.println("군번호: " + p2.getmId());
	}
}

----------------------------------------------------------------------------------------------------------------------
public class Person {
	private String name;
	private String mId;
	
	public      (1)      getName() { return name; }
	public      (1)      getmId() { return mId; }

	public       (2)    (     (3)      name){
		this.name = name;
		this.mId = "     (4)     ";
	}
	
	public Person(String name, String mId){
		this.name = name;
		this.mId = mId;
	}
}

                        )       2)                         )          3)                         )  4)                          )  

1) String    2) Person   3) String    4) 해당없음




< 생성자 >
다음 코드의 결과물이 아래와 같을 때, 생성자를 작성하시오

< 결과물 >
둘레: 18.84
넓이: 28.26
 
public class Test03 {

	public static void main(String[] args) {
		
		Circle c1 = new Circle(3);
		
		c1.showPerimeter();
		c1.showArea();
	}
}
----------------------------------------------------------------------------------------------------------------------
public class Circle {
	
	private static final float PI = 3.14f; 
	private int r;

           //생성자를 작성하시오. 단 파라미터는 “int r”이다.
	


	public void showPerimeter(){
		System.out.println("둘레: " + (this.r * 2 * PI));
	}
	
	public void showArea(){
		System.out.println("넓이: " + (this.r * this.r * PI));
	}

}




생성자:                                                           )


답) public Circle(int r) {  this.r = r; }



< 다형성 >
다음 코드의 출력 결과가 아래와 같을 때, 코드를 완성하시오.

< 출력 결과 > 홍길동의 성적은A입니다

public class Test04 {
	public static void main(String[] args) {
		Score s = new Score("홍길동", 100, 90, 100);
		
		System.out.println(s.getName() + "의 성적은" + s.getGrade() + "입니다");
	}
}
------------------------------------------------------------------------------------------------------------------------
public class Score {
	private String name;
	private int kor;
	private int eng;
	private int math;
	private int sum;
	private double avg;
	private String grade;
	
	public Score(String name, int kor, int eng, int math){
		this.name = name;
		this.kor = kor;
		this.eng = eng;
		this.math = math;		
	}
	
	public String getName(){ return this.name; }
	public String getGrade(){ return this.grade; }
	
	public void sum(){ this.sum = this.kor + this.eng + this.math; }
	
	public void avg(){ avg = this.sum / 3; }
	
	public String grade(){
		if(avg >= 90){ 	grade = "A"; 
                       }else if(avg >= 80){ grade = "B";
		}else{ grade = "F"; }
		return grade;
	}
}
답 :Test04 코드에서  Score s = new Score("홍길동", 100, 90, 100);아래에 다음 코드 추가 
=> s.sum(); s.avg(); s.grade();
다음 코드의 빈칸을 채우시오


public class Test05 {

	public static void main(String[] args) {
		
		GetSet test = new GetSet();
		
		test.getGetSet("1");

	}

}
 
-------------------------------------------------------------------------------------------------------------------------
public class GetSet {

	private int get;
	
	public String getGetSet(String get){
		this.get =                             ;
		return get;
	}

}






답: Integer.parseInt(get)



< for문 >
다음 코드의 출력 결과를 보고 코드에서 틀린 부분을 찾아 고치시오(총 3문제)

< 출력 결과 >

for문을 연습해봅시다
0: 1
1: 2
2: 3
3: 4
4: 5


public class Java06 {

	public static void main(String[] args) {
		
		System.out.println("for문을 연습해봅시다");
		
		for(i=0; i<=5; i++){
			System.out.println(i + ": " + i+1);
		}

	}

}



i = 0;  => int i = 0;
i <= 5;   => i < 5;
System.out.println(i + ": " + i+1); => System.out.println(i + ": " + (i+1));




< if문 >
다음 코드의 출력 결과를 예측하시오

public class Java07 {

	public static void main(String[] args) {
		
		int num = 10;
		
		if(num > 0){
			System.out.println("num은 0보다 크다.");
			
			if(num % 2 == 0){
				System.out.println("num은 짝수입니다.");
			}else{
				System.out.println("num은 홀수입니다");
			}
		}

	}

}



답:                                                                          )


답: num은 0보다 크다.
     num은 짝수입니다.

다음 코드의 출력 결과가 아래와 같을 때, 코드를 완성하시오.

< 출력 결과>
제 나이는 12입니다.
제 키는 12.5입니다.
제 나이는 12입니다.
제 키는 189.0입니다.
안녕히 가십시오

public class Java08 {

	public static void main(String[] args) {
		
		double myHeight = 189.0;
		hiEveryone(12, 12.5);
		hiEveryone(12, myHeight);
		byeEveryone();
	}
		
		public        (1)         hiEveryone(int age,      (2)        height){
			System.out.println("제 나이는 " + age + "입니다.");
			System.out.println("제 키는 " + height + "입니다.");
		}
		
		public         (3)          byeEveryone(){
			System.out.println("안녕히 가십시오");
		}
	
}



                    )
                    )
                    )


답:                  
static void
double
static void


———————————————————————————————————————————


1. Data2가 에러가 나는 이유 무엇인가?   // Data2의 생성자 Data()가 정의되지 않아서

 class Data1 {
	int value;
}
class Data2 {
	int value;
	
	Data2(int x) {
		value = x;
	}
}

class ConstructorTest {
	public static void main(String[] args) {
		Data1 d1 = new Data1();
		Data2 d2 = new Data2();
	}
}








2. 다음 코드에서 출력되는 것을 적으시오.    
class Car {
	String color;
	String gearType;
	int door;
	
	Car() {}
	Car(String c, String g, int d) {
		this.color = c;
		this.gearType = g;
		this.door = d;
	}
}

public class CarTest {

	public static void main(String[] args) {
		Car c1 = new Car();
		c1.color = "white";
		c1.gearType = "auto";
		c1.door = 4;
		
		Car c2 = new Car("blue", "auto", 2);
		
		System.out.println(c1.color);
		System.out.println(c2.door);
	}

}


답
white
2









3. 다음 빈칸을 적으시오.    // double d
class Overloadingtest {
    void test(){
        System.out.println("매개변수 없음");
    }

    void test(int a, int b){
        System.out.println("매개변수 "+ a + "와 " + b);
    }
    
    void test(         ?       ){
        System.out.println("매개변수 " + d);
    }
}


public class test {

    public static void main(String[] args) {
        
        Overloadingtest ob = new Overloadingtest();
        
       ob.test();
        
       ob.test(10, 20);
        
       ob.test(50);
        
       ob.test(123.4);
    }
}






4. 다음 중 호출 되는 생성자는 무엇인가?      // add(int a, int b),   add(double a, double b)
class overLoading
{
   public static void main(String[] args)
  {
   functionOverload obj = new functionOverload();

   obj.add(1,2);
   obj.add(11.5, 22.5);
   }
}

class functionOverload
{
    void add(int a, int b)             // 1 - A method with two parameters
    {

       int sum = a + b;
       System.out.println("int2 Sum of a+b is "+sum);

    }    

    void add(int a, int b, int c)       {

       int sum = a + b + c;
       System.out.println("int3 Sum of a+b+c is "+sum);

    }

    void add(double a, double b)             {

       double sum = a + b;
       System.out.println(" double Sum of a+b is "+sum);
    }

    void add(String s1, String s2)

    {
      String s = s1+s2;
      System.out.println("String" + s);
    }
}

5. 빈칸을 적으시오    // DisplayOverloading
class DisplayOverloading
{
    public void disp(char c)
    {
         System.out.println(c);
    }
    public void disp(char c, int num)  
    {
         System.out.println(c + " "+num);
    }
}
class Sample
{
   public static void main(String args[])
   {
       DisplayOverloading obj = new (         ?               )();
       obj.disp('a');
       obj.disp('a',10);
   }
}









6. 호출되는 생성자를 순서대로 적으시오    //   1-3-4-2
class Overload2 {

1) void add(int m, int n) {6. 
		int sum = m + n;
		System.out.println("Sum of a+b is " + sum);
	}

2) void add(int a, int b, int c) {

		int sum = a + b + c;
		System.out.println("Sum of a+b+c is " + sum);

	}

3) void add(double a, double b) {

		double sum = a + b;
		System.out.println("Sum of a+b is " + sum);
	}

4) void add(String s1, String s2) {
		String s = s1 + s2;
		System.out.println(s);
	}
}

class overloadfunc {

	public static void main(String args[]) {
		Overload2 obj = new Overload2();

		obj.add(4, 19);

		obj.add(1.5, 21.5);

		obj.add("Life at", " the speed of rail ");

		obj.add(4, 17, 11);

	}

}




7. 다음에 출력되는 값은?     // 14.25

class SuffixConst
{
	public static void main(String[] args)
	{
		double e1=7.125;
		float e2=7.125F;
		
		
		System.out.println(e1 + e2);
	}








8 오류가 나는 문장은?   //  3번


class Test {
	public static void main(String args[]) {
		int i = 1;
		long j = 2;
j = i; 
 i = (int) j;
i = j; 
i = (int) j; 
	}
}





9 다음 빈칸에 알맞은 타입을 적으시오   // long,    float


class Test {
	public static void main(String args[]) {
		int i = 100;
		long l = i;
		float f = i;
		
		System.out.println("Int value " + i);
		System.out.println("(           ) value " + l);
		System.out.println("(           ) value " + f);

	}
}





10. 다음 출력값을 적으시오.

class Test {
	public static void main(String args[]) {
		Integer iValue = 10;
		Double dValue = 3.14;
		
		System.out.println(iValue);
		System.out.println(dValue);
		
		int num1 = iValue;
		double num2 = dValue;
		
		System.out.println(num1);
		System.out.println(num2);
		

	}
}



답 
10
3.14
10
3.14



—————————————————————————————————



1. 클래스 맴버만 접근 가능하게 캡슐화를 하려고 한다. 빈칸에 알맞은 것을 고르시오.




1. public class Dog  
2. {  
3.        1)___________ static int count;     //static member  
4.    
5.        public Dog()  
6.        {       count++;  
7.        }  
8.         
9.        public static void main(String a[])  
10.        {   Dog d=new Dog();  
11.            Dog dd=new Dog();  
12.            new Dog();  
13.            Dog.display();       
14.         }  
15. private static void display()  
16. {  
17.       System.out.println(count);  
18. }  
19. }  




1. private 2) protected  3) default  4) public 5) class










1. 1.


1) private => 클래스 멤버만 접근 가능
   2) protected => 같은 패키지의 클래스에 접근 가능. 자식 클래스 접근 가능.
   3) (default) => 같은 패키지의 클래스만 접근 가능.
   4) public => 모두 접근 가능












1.  인스턴스 변수를 선언하려고 한다. 밑줄 친 부분 중 제거 해야 할 것을 고르시오.
public 1)class Stuff {
        
        2) static  int count = 0;
        
        int id;
        
        3)public Stuff() {

                count = count + 1;
                
                id = count;
        }
        4)public int getId() {
                5)return id;
        }
}
  
1. class          2) static        3) public          4) public          5)return


1. 2) static








1. 클래스를 지정할 때는 반드시 패키지 이름을 적어야 하지만 적지 않아도 되는 패키지는 무엇인가?        










public class Quiz {        


  public static void main(String[] args) {
       byte pb = 20;
    Byte b = new Byte(pb);


    double d2 = b.doubleValue();
    String str = b.toString();
    
    short ps = 30;
    Short s = new Short(ps);
    
    Integer i = new Integer(30);


    Long l = new Long(40);


    Float f = new Float(20.0f);


    Double d = new Double(20);


    Boolean bool = new Boolean(true);


    Character c = new Character('A');


    
  }


}




1. java.lang        2)    System.out      3)  this   4)  java01   5)  java.test01
1. 1)








1.  내부 변수의 값을 리턴하는 메서드에 붙이는 접두어는 무엇인가?




public class Calculator {


  private static int result;
  


  static int 1)____Result() {
    return result;
  }
  
  static void plus(int value) {
    result += value;
  }
  
  static void minus(int value) {
    result -= value;
  }
  
  static void multiple(int value) {
    result *= value;
  }
  
  static void divide(int value) {
    result /= value;
  }
}






1. get      2) put    3) push  4)  by   5)  god










1.   sum1의 데이터 형을 고르시오.






package java01;


public class Test35 {
  public static void main(String[] args) {
    byte b = 10;
    byte b2 = 10;
    short s = 10;
    char c = 10;
    int i = 10;
    long l = 10L;
    float f = 10.0f;
    double d = 10.0;
    
    //byte sum1 = b + s + c + i + l + f + d;
   


  }
}




1. double  2)  float  3)  int  4)   long   5)  char


1. double






6.다음 출력값이 2.5가 나오게 하려고 한다. 빈칸을 채우시오.




  public static void main(String[] args) {


    int x = 5;
    int y = 2;






   System.out.println(x / y);
   System.out.println((________)x / (_________)y);
   
  }




A.float








7.
다음중 오류가 발생하는 것을 고르시오.




  public static void main(String[] args) {
    1)int i = 10;






    2)byte b = 10;
    
   




    3)byte b2 = i;  // 오류!
    
   
   4) byte b3 = (byte)i; 


      int i2 = 256;


1. byte b4 = (byte) i2;




  }




1.  2)   3)   4)   5)




A.3)








8.다음 빈칸에 알맞은 것을 쓰시오.






class Score {
  String name; // 용어: 인스턴스 변수, 속성(attribute)
  int kor;
  int eng;
  int math;
  int sum;
  float average;
  
  // 기본 생성자: 파라미터가 없는 생성자 
  // 생성자를 정의하지 않으면 컴파일러가 다음과 같이 자동으로 추가한다.
  //public Score() {}
  
  // 생성자 추가
  public ________(String name, int kor, int eng, int math) {
    this.name = name;
    this.kor = kor;
    this.eng = eng;
    this.math = math;
    
    compute();
  }
  
A.Score









9.
밑줄 친 부분에 대한 설명으로 알맞은 것을 고르시오.




package java01;


public class Test33 {


  public static void main(String[] args) {
      Integer i = 10; 
    


    int j = i; 
    
    
    


  }


}


1)boxing  2) unboxing  3) autoboxing   4)new Integer(10)과 같다.  5) i.intValue() 와 같다.






1.  1) 4)











10.  Score 클래스에 정의된 인스턴스 변수를 준비하는 메모리 영역을 쓰시오.








public class Test38 {


  public static void main(String[] args) {


    
    Score s = new Score("홍길동", 100, 100, 90);
    
    System.out.println("이름:" + s.name);
    System.out.println("국어:" + s.kor);
    System.out.println("영어:" + s.eng);
    System.out.println("수학:" + s.math);
    System.out.println("합계:" + s.sum);
    System.out.println("평균:" + s.average);


  }


}




A.Heap




다음 빈칸에 들어갈 알맞은 단어는?
정담  new Father()

public class Father
{
         public Father()
         {
                  System.out.println(" I am Father ");
         }
         public static void main(String[] args)
         {
                  Father f = (                );
         }
}








다음 소스코드 중 count라는 변수가 선언되어 있다. 이 클래스를 실행했을 때 출력 결과는 c1과 c2의 값이 각각 1 이 나온다. c1의 값이 1이 나오고, c2의 값이 2가 나오려면 다음 코드중 무엇을 어떻게 바꿔야 하는가?

정답  int count = 0; => static int count = 0;

public class Counter  {    int count = 0;    Counter() {        this.count++;    }     public static int getCount() {        return count;    }     public static void main(String[] args) {        Counter c1 = new Counter();        Counter c2 = new Counter();         System.out.println(Counter.getCount());    } }







3. 다음은 오버로딩 클래스이다. 이 클래스를 main메서드에서 불러오시오.
정답 => 1. Overloadingtest ob = new Overloadingtest();
2. ob.test();
     ob.test(10, 20);
      ob.test(50);
      ob.test(123.4);

1.작성, 2번중 한가지 작성하면 정답


public class Overloadingtest {
    // test() 호출
    void test(){
        System.out.println("매개변수 없음");
    }
    // test에 매개변수로 int형 2개 호출
    void test(int a, int b){
        System.out.println("매개변수 "+ a + "와 " + b);
    }
    // test에 매개변수 double형 1개 호출
    void test(double d){
        System.out.println("매개변수 " + d);
    }
}
       








4. 다음 코멘트 중 틀린 것은?
정답 > 5

class Score {
  String name;                 // 1) 인스턴스 변수, 속성(attribute)
  int kor;
  int eng;
  int math;
  int sum;
  float average;
 
 //  2) 생성자를 정의하지 않으면 컴파일러가 다음과 같이 자동으로 추가한다.
  public Score() {
    this.name = "홍길동";
  }
 
  // 3) 생성자 추가
  public Score(String name, int kor, int eng, int math) {
    this.name = name;
    this.kor = kor;
    this.eng = eng;
    this.math = math;
   
    compute();
  }
 
  // 4) 연산자를 정의하는 문법 => 메서드
  public void compute() {                // 5) 파라미터가 없는 생성자
    this.sum = this.kor + this.eng + this.math;
    this.average = this.sum / 3.0f;
  }
}









5. 다음과 같은 생성자 함수가 있다. 이를 호출하는 표현을 쓰시오
정답 =>   Example ex = new Example();


 public class Example {
     public Example() {
        ...
     }
  }





6. 다음 암시적 형변환을 하면 오류가 생긴다. 이를 해결할 방법 중 하나는 바이트가 아닌 상수를 제거하는 방법이 있다. 또 다른 하나의 방법을 제시하시오
정답 : sum 에 대한 타입을 double로 바꾼다.


public static void main(String[] args) {
    byte b = 10;
    byte b2 = 10;
    short s = 10;
    char c = 10;
    int i = 10;
    long l = 10L;
    float f = 10.0f;
    double d = 10.0;
   
    byte sum = b + b2 + s + c + i + l + f + d;










7. 다음의 코드는 오류를 발생한다. 이를 수정하시오.
정답 : float j = 50.0f 로 선언하거나 int j 로 바꿈
 
int i = 20;
float j = 50.0;

System.out.println(i + j);












8. 다음 중 틀린 주석을 찾고 그 부분을 고치시오
정답 : 4) new Integer(20) => intValue()

public class ex8 {

  public static void main(String[] args) {
    // 1) boxing
    Integer i = 20; // 2) new Integer(20)과 같다.
   
    // 3) unboxing
    int j = i; // 4) new Integer(20)과 같다.






9. 다음 중 틀린 부분을 수정하시오.
정답 : 3) java.lang.Integer
        7) java.lang.Boolean
        8) java.lang.Character


** Wrapper class
   
1)   byte => java.lang.Byte
2)   short => java.lang.Short
3)   int => java.lang.Int
4)   long => java.lang.Long
5)   float => java.lang.Float
6)   double => java.lang.Double
7)   boolean => java.lang.Bool
8)   char => java.lang.char






10. 다음 중 틀린 것을 고치시오?
정답 : 1) byte,short,char => int
          2) byte => int

**암시적 형변환(implicit type conversion)
 
  1) byte => short => char => int => long => float => double
  2) 연산의 기본은 byte이다!








코드1. 다음 코드를 무사히 컴파일할 수 있게 만드쇼!!


=> 출력결과
tape playing
tape recording
	

---------------------------------------------------------------------------------


class TapeDeck {
        
        boolean canRecord = false;
        
        void playTape() {
                System.out.println(문제1) 답: "                                                    ");
        }
        
        void recordTape() {
                System.out.println(문제2) 답:  "                                                   ");
        }


}




public class TapeDeckTestDrive {


        public static void main(String[] args) {
                
                (문제3) 답 :                                                        )
                
                t.canRecord = true;
                t.playTape();
                
                if (t.canRecord == true) {
                        t.recordTape();
                }


        }


}






코드2. 다음 코드를 무사히 컴파일할 수 있게 만드쇼!!


public class DVDPlayer {
        
        boolean canRecord = false;
        
        void recordDVD() {
                System.out.println("DVD recording");
        }


        
        (문제4) 답 :                                                                       )




}




public class DVDPlayerTestDrive {


        public static void main(String[] args) {
                DVDPlayer d = new DVDPlayer();
                d.canRecord = true;
                d.playDVD();
                
                if (d.canRecord == true) {
                        d.recordDVD();
                }


        }


}




---------------------------------------------------------------------------------


문제5-6) 출력 결과를 쓰쇼!
=> 출력결과
문제5) 답: 
문제6) 답: 
	



코드3. 다음 코드를 무사히 컴파일할 수 있게 만드쇼!!


public class Movie {
        String title;
        String genre;
        int rating;
        
        void playIt() {
                System.out.println("영화를 상영합니다.");
                System.out.println(title);
                System.out.println(genre);
                System.out.println(rating);
        }
}


public class MovieTestDrive {
        public static void main(String[] args) {
                (    A     ) one = new (    A     )();
                one.title = "애나벨";
                one.genre = "공포";
                one.rating = -2;
                (    A     ) two = new (    A     )();
                two.title = "제보자";
                two.genre = "드라마/심리”;
                two.rating = 5;
                two.playIt();
                (    A     )three = new (    A     )();
                three.title = "나의사랑 나의 신부";
                three.genre = "드라마/로맨스/멜로";
                three.rating = 127;
        }
}
---------------------------------------------------------------------------------
문제7) A에 공통으로 들어갈 단어를 쓰시오. 
답: 




문제8) 2번 객체에 들어있는 변수의 값을 적으쇼.
title :
genre :
rating :
	코드4. 아래 코드들을 무사히 컴파일 할 수 있게 재배치 하쇼!! (문제9)


답은 이곳(↓↓↓↓↓↓)에 적으쇼!!!!!!!


d.playSnare();
	

DrumKit d = new DrunKit();
	

boolean topHat = true;
boolean snare = true;
	

void playSnare() {
System.out.println("bang bang ba-bang");
}
	

public static void main(String[] args) {
	

if (d.snare == true) {
    d.playSnare();
}
	

d.snare = false;
	

class DrumKitTestDrive {
	

d.playTopHat();
	

class DrumKit {
	

void playTopHat() {
System.out.println("ding ding da-ding");
}
	







코드5. 다음 코드를 무사히 컴파일할 수 있게 만드쇼!! 문제10


class Output {
        public static void main(String[] args) {
                Output o = new Output();
o.go();
        }
        void go() {
                int y = 7;
                for(int x = 1; x < 8; x++) {
                        if (x > 4) {
                                System.out.println(++y + “”);
}
if (y > 14) {
        System.out.println(“ x = “ + x);
break;
}
}
}
}
---------------------------------------------------------------------------------
문제10) 위 코드의 출력 결과를 적어보아용~


답:







답안!!
1. tape playing
2. tape recording
3. TapeDeck t = new TapeDeck();
4. void playDVD() {System.out.println("DVD playing");}
5. DVD playing
6. DVD recording
7. Movie
8. 제보자, 드라마/심리, 5
9.
class DrumKit {
        boolean topHat = true;
        boolean snare = true;
        
        void playSnare() {
                System.out.println("bang bang ba-bang");
        }
        
        void playTopHat() {
                System.out.println("ding ding da-ding");
        }
}


class DrumKitTestDrive {


        public static void main(String[] args) {
                
                DrumKit d = new DrumKit();
                
                d.playSnare();
                d.playTopHat();
                
                d.snare = false;
                
                if (d.snare == true) {
                        d.playSnare();
                }
        }
}
10. 13 15 X = 6




* Bit_반기백                                                


1. 아래 코드의 문제점을 수정해서 실행결과와 같은 결과를 얻도록 하시오.  (2군데) 


* 힌트 : 2군데 형 변환을 안 하였음.


public static void main(String[] args) {
                                                
bytea=10; byteb=20;
byte c = a + b;
                                                
char ch = 'A';
                                                
ch = (char)(ch + 2); floatf=3/2f;
                                                
long l = 3000 * 3000 * 3000L; float f2 = 0.1f;
                                                
double d = 0.1;
                                                
boolean result = d==f2;
                                                
System.out.println("c="+c);
System.out.println("ch="+ch);
System.out.println("f="+f);
System.out.println("l="+l);
System.out.println("result="+result);

                        }
}
        
===================================
[ 실행결과 ]                                                        
c=30
ch=C
f=1.5
l = 27000000000 result=true                                         
===================================                                
                        
답안 :                                                    
                                        
public static void main(String[] args) {
                                                
bytea=10; byteb=20;
byte c = (byte)(a + b);
                                                
char ch = 'A';
                                                
ch = (char)(ch + 2); floatf=3/2f;
                                                
long l = 3000 * 3000 * 3000L; float f2 = 0.1f;
                                                
double d = 0.1;
                                                
boolean result = (float)d==f2;
                                                
System.out.println("c="+c);
System.out.println("ch="+ch);
System.out.println("f="+f);
System.out.println("l="+l);
System.out.println("result="+result);

                                        
} 
}                                
                        


1. 해당 실행결과가 나오도록 빈 칸을 작성하시오.


public static void main(String[] args) {


                int[] score = { 79, 88, 91, 33, 100, 55, 95};
                
                int max = score[0];
                int min = score[0];
        
                for (int i=1; i < score.length; i++) {
                        [


                                빈 칸


                        ]
                        
                        }
                }
                        System.out.println("최대값 :" + max);
                        System.out.println("최소값 :" + min);
                
        }


===================================
[ 실행결과 ]                                                        
최대값 :100
최소값 :33                                
===================================


답안 :
if(score[i] > max) {
                max = score[i];
                        }
        if(score[i] < min){
                min = score[i];
                        }
                


                                 
                        
1. 다음의 for문을 while문으로 변경하시오.


public static void main(String[] args) {
                                                
for(int i=0; i<=10; i++) { for(int j=0; j<=i; j++)
                                                
              System.out.print("*");
          System.out.println();

                                                
} 
} 
                                                
                        
답안 : 
                                                                                
public static void main(String[] args)
 {
                                                
int i=0; while( i<=10) 
{                                                
int j=0; while(j<=i) {                
                              System.out.print("*");                        
j++; 
}                                        
              System.out.println();
i++; 
}
}                        




1. 실행결과를 쓰시오.
                        
public static void main(String[] args) {
                                                
for(int i=1;i<=6;i++) 
for(int j=1;j<=6;j++)
                        
if(i+j==6)
   System.out.println(i+"+"+j+"="+(i+j));

} 


======================
답안 : 
1+5=6
2+4=6
3+3=6
4+2=6
5+1=6
======================


1. 랜덤으로 1~6사이의 값을 나오게 하려한다. 빈칸을 작성하시오.  
                
public static void main(String[] args) {
                
                        int value = [ 빈칸 ]
                        System.out.println("value:"+value);
                
                }


======================
답안 : 
(int) (Math.random()*6)+1;
======================
                        


1. 빈 칸을 작성하시오. (삼항연산자를 사용하시오.)
* ex) (  >= ) ? :


                public static void main(String[] args) {
        
                        int x =  10;
                        int y =  -10;


                        [ 빈 칸 ]


                System.out.println(“x = 10일 때,  x의 절대값은 “ +aX);
                System.out.println(“y = 10일 때,  x의 절대값은 “ +aY);
                
}


실행결과 : 
x=10일 때, x의 절대값은 10
y=-10일 때, y의 절대값은 10


======================
답안 : 
int aX = ( x>= 0 ) ? x : -x;
int aY = ( y>= 0 ) ? y : -y;
======================




1. 실행결과를 작성하시오.


public static void main(String[] args) {
        
String str1 = “Bit” + “64gi”;
        String str2 = “Bit” + ‘A’;
        String str3 = “Bit” + 3;
        String str4 = 6 + “Bit” + 4;
        str4 += ‘!’;


        Systrm.out.println(str1);
        Systrm.out.println(str2);
        Systrm.out.println(str3);
        Systrm.out.println(str4);
}


======================
답안 :
        Bit64gi
        BitA
        Bit3
        6Bit4!
======================




1. 실행 결과가 나오도록 빈칸을 작성하시오.


  public static void main(String[] args) {
String[ ] strArr=new String[3];
[


빈 칸


]


for(int i =0; i < strArr.length ; i++)
        System.out.println(strArr[i]);
}
실행결과 :
        Bit
        64gi
        zzang!


========================
답안 :
        strArr[0]=new String(“Bit”);
        strArr[1]=new String(“64gi”);
        strArr[2]=new String(“zzang!”);
========================




1. 빈 칸을 작성하시오.


 public static void main(String[] args) {
                        int num =1;


                        while(true)
                        {
                                if(num%6==0 [ 빈 칸 ] num%14==0)
                                        break;
                                num[ 빈 칸 ];
                        }
                        System.out.println(num);
                }


                실행결과 : 42


                        =======================
                        답안 : 
&& / ++         
                        =======================






1. 실행 결과를 작성하시오.


                 public static void main(String[] args) 
{
                        int [] arr = {1,2,3,4,5};


int sum = 0;
for (int e : arr)
sum +=e;


System.out.println(“배열 요소의 합 : “ +sum);


for (int e : arr)
{
e++;
System.out.println(e+” “);
}


System.out.println(“”);
for(int e : arr)
System.out.println(e+ “ “);
}


                        =======================
                        답안 : 
                        
                        배열 요소의 합 : 15
2 3 4 5 6
1 2 3 4 5
                        =======================







작성자 : 염정우
< 문제1 > 실행했더니 다음의 출력결과가 나왔습니다. 빈 칸에 들어갈 알맞은 말을 채우시오.

class MyHouse {
  int height;
  MyHouse() {
	System.out.println("다른 집도 지으려고 새로 벽돌을 쌓았어요!");
	height = 2;
  }
  MyHouse(int i) {
	System.out.println(i + "m 높이의 집1 을 짓는중이에요!");
	height = i;
  }
  void displayHeight() {
	System.out.println("이 집의 높이는 " + height
    	+ "m 네요!!!");
  }
  void displayHeight(String s) {
	System.out.println(s + ">>> 높이 : "
    	+ height + " m 입니다 <<<");
  }
}
public class BuildHouse {
  public static void main(String[] args) {
	MyHouse build = new MyHouse(5);
	build.displayHeight();
	build.displayHeight("인스턴트 메서드를 오버로딩했어요!");
	MyHouse build2 = new MyHouse();
	                    ();
	                    ("오버로딩한 생성자의 인스턴트 메서드를 오버로딩했어요.");
  }
}
------------------콘솔 출력 결과---------------------------------------------------
5m 높이의 집1 을 짓는중이에요!
이 집의 높이는 5m 네요!!!
인스턴트 메서드를 오버로딩했어요!>>> 높이 : 5 m 입니다 <<<
다른 집도 지으려고 새로 벽돌을 쌓았어요!
이 집의 높이는 2m 네요!!!
오버로딩한 생성자의 인스턴트 메서드를 오버로딩했어요.>>> 높이 : 2 m 입니다 <<<
-----------------------------------------------------------------------------------
정답 : build2.displayHeight




< 문제2 > 다음 자바 소스코드에서 
doTowers 메서드와, System.out.println 메서드는 몇 번 호출되는가?


public class TowerHanoi {
  public static void main(String[] args) {
	int nDisks = 3;
	doTowers(nDisks, "왼쪽꽂이", "가운데꽂이", "오른쪽꽂이");
  }
  static void doTowers(int topN, String from,
  	String inter, String to) {
	if (topN == 1){
  	System.out.println("1번째 작은링이 " +
      	from + " 에서 " + to +"로 옮겨졌어요.");
	}else {
  	doTowers(topN - 1, from, to, inter);
  	System.out.println(
      	+ topN +"번째 작은링이 " + from + " 에서 " + to + "로 옮겨졌어요.");
  	doTowers(topN - 1, inter, from, to);
	}
  }
}


	•	6, 7
	•	7, 8
	•	7, 7
	•	8, 8
	•	9, 9


정답 : 3








< 문제3 > 다음 자바 소스코드를 실행하면 콘솔창에 
float을 출력하는 보기를 모두 고르시오.

public class MainClass {

  public static void main(String[] args) {
	Other.method(3f, 4F);
	Other.method(3, 4);
	Other.method(3E10F, 4);
	Other.method(3, 4e-40f);
	Other.method(3e-40F, 4e1F);
    

  }

}

class Other {
  static void method(int a, int b){
	System.out.println("int");
  }
  static void method(float var1, float var2){
	System.out.println("float");
    
  }

}

	•	Other.method(3f, 4F);
	•	Other.method(3, 4);
	•	Other.method(3E10F, 4);
	•	Other.method(3, 4e-40f);
	•	Other.method(3e-40F, 4e1F);


정답 : 1, 3, 4, 5










< 문제4 > 다음 자바 소스코드에서 빈칸을 채우려고 합니다.
보기의 내용으로 채운다고 했을 시
컴파일 오류가 나지 않는 경우를 모두 고르시오.

public class MainClass {

  public static void main(String[] args) {

  }

}

class Other {
  static void method(                         ){
	System.out.println("첫 메서드");
  }
  static void method(                         ){
	System.out.println("두 번째 메서드");
    
  }

}
	•	int a, int b, float c / int var1, int var2, float var3
	•	int a, int b / float var1, float var2
	•	int a, int b / int num
	•	int a, float b / float var1, int var2
	•	int a, int b / int var1, int var2

정답 : 2, 3, 4














< 문제5 > 다음 자바 소스코드를 실행하면 콘솔창에 나오는 숫자들을 
콘솔창에 출력된 순서대로 쓰시오. 예)5-4-2-3-3

public class Overloading {


  public static void main(String args[]){  
	OverloadingC obj=new OverloadingC();  

	obj.sum(20, 20);
	obj.sum(20L, 20);
	obj.sum(20, 20f);
	obj.sum(20L, 20);
	obj.sum(20d, 20);
  }  

}
class OverloadingC{  
  void sum(int a, long b){System.out.println("1");}
  void sum(long a, double b){System.out.println("2");}
  void sum(long a, long b){System.out.println("3");}
  void sum(double a, float b){System.out.println("4");}
  void sum(int a, float b){System.out.println("5");}

}

정답 : 1-3-5-3-4















< 문제6 > 다음 자바 소스코드에서 컴파일 오류를 출력하는 
메소드의 번호를 모두 고르시오.

class Overloading{  

  public void show(String message){
	System.out.println(message);
  } // 1

  public void show(String message, boolean show){
	System.out.println(message);

  } // 2

  public void show(boolean show, String message){
	System.out.println(message);

  } // 3

  public void show(Integer message){
	System.out.println(message);

  } // 4

  public boolean show(String message){
	System.out.println(message);
	return false;

  } // 5

}

정답 : 1, 5








< 문제7 > 다음은 다음 자바 소스코드를 실행한 콘솔 출력결과입니다.
System.out.println((byte)140); 를 실행하면 무엇이 출력되는지 쓰시오.




public class Test {
 
  public static void main(String[] args) {
   	 
    	for (int i = 0; i < 200; i++){
    	byte b = (byte)i;
    	System.out.print(b +", ");
    	}
  	 
  }

}

------------------콘솔 출력 결과---------------------------------------------------
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, -128, -127, -126, -125, -124, -123, -122, -121, -120, -119, -118, -117, -116, -115, -114, -113, -112, -111, -110, -109, -108, -107, -106, -105, -104, -103, -102, -101, -100, -99, -98, -97, -96, -95, -94, -93, -92, -91, -90, -89, -88, -87, -86, -85, -84, -83, -82, -81, -80, -79, -78, -77, -76, -75, -74, -73, -72, -71, -70, -69, -68, -67, -66, -65, -64, -63, -62, -61, -60, -59, -58, -57,
-----------------------------------------------------------------------------------


정답 : -116








< 문제8 > 다음 자바 소스코드에서 빈 칸에 넣어도 컴파일 오류가 나지 않는 것을
모두 고르시오.

public class Constructor {
 

  public static void main(String[] args) {
    	Number num1 = new Number();
    	System.out.println(num1.getNumber());
   	 
    	Number num2 = new Number();
    	System.out.println(num2.num);
  }

}


class Number {
          int num;
  public Number()
  {
	num = 10;
	System.out.println("생성자 호출!");
    
  }
  public int getNumber()
  {
	return num;
  }
 
}

	•	(default) : 아무것도 넣지 않는다.
	•	protected
	•	private
	•	public
	•	personal


정답 : 1, 2, 4


< 문제9 > 다음 자바 소스 코드의 출력 결과를 쓰시오.
public class Constructor1 {

  public static void main(String[] args) {
	Number num1 = new Number(33);
	Typetester t = new Typetester();
	t.printType(num1.getNumber());
	Number num2 = new Number(22);
	t.printType(num2.num);
  }
}
class Number {
  public float num;
  public Number(long i)
  {
	num = i;
  }
  public double getNumber()
  {
	return num;
  }
}
class Typetester {
  void printType(byte x) {
	System.out.println(x + "(은)는 byte 타입입니다.");
  }
  void printType(int x) {
	System.out.println(x + "(은)는 int 타입입니다.");
  }
  void printType(float x) {
	System.out.println(x + "(은)는 float 타입입니다.");
  }
  void printType(double x) {
	System.out.println(x + "(은)는 double 타입입니다.");
  }
  void printType(char x) {
	System.out.println(x + "(은)는 char 타입입니다.");
  }
}

정답 : 33.0(은)는 double 타입입니다.
       22.0(은)는 float 타입입니다.

< 문제10 > 다음 자바 소스 코드를 컴파일하면 
java01 디렉토리 안에 몇 개의 class파일이 생성되는가?


package java01;

public class MainClass {

  public static void main(String[] args) {
	AAA aaa = new AAA();
	aaa.printName();
	BBB bbb = new BBB();
	bbb.printName();
	 
  }

}
class AAA
{
  public void printName()
  {
	System.out.println("AAA");
  }
}
class BBB
{
  public void printName()
  {
	System.out.println("BBB");
  }
}

정답 : 3개



package java02;
class Calculator{
            ( 빈 칸 )   int base;  //Calculator.base로 호출했군요..
	int left , right;
	public void setOprands(int left , int right){
		this.left = left;
		this.right = right;
	}
	public void sum(String value){
		System.out.println(value + (this.left + this.right + base));
	}
	public void avg(){
		System.out.println((this.left + this.right + base) / 2);
	}
}
public class CalculatorDemo1{
	public static void main(String[] args){
		Calculator c1 = new Calculator();
		c1.setOprands(10, ( 빈 칸 ));         //c1의 합계는 30입니다.파라미터 값으로 
                                                                               //적당한 값을 선택해 보세요. 
		c1.sum("c1의 합계는 ? ");
		Calculator c2 = new Calculator();
		c2.setOprands(20, 40);
		c2.sum("c2의 합계는 ? ");

	           Calculator.base = 10;   

		c1.sum("c1의 합계는 ? ");
		c2.sum("c2의 합계는 ? ");
	}
}

다음과 같은 결과가 나오도록 빈칸을 채워주세요.
====================console==================
c1의 합계는 ? 30
c2의 합계는 ? 60
c1의 합계는 ? 40
c2의 합계는 ? 70

정답 : static   /   20



히드라가 질럿을 공격하고 있어요..
1번 질럿과 2번 질럿의 체력과 빈칸을 채워주세요..(단 체력 0이하의 질럿 객체는 모두 0 으로                                                                                                처리해주세요..)

package java02;
class Zealot {                          //질럿 클래스 시작지점입니다
	int shields = 10;          //질럿의 피는 10입니다.
	int zealot;
	Zealot( ( 빈 칸 ) ) {    //몇 번째 질럿 객체인지에 대한 파라미터 값을 전달 받는군요.
                                              //바로 및의 소스를 참고해서 채워주세요.
		this.zealot = zealot;
	}
    void UnderFire(int num2,int power) {       //파라미터 : 공격 당한 횟수, 히드라 파워
		shields -= (num2*power);
		if(this.shields < 0){
			System.out.println(this.zealot+"번째질럿의 체력은 : " + "Death");
		}else{
			System.out.println(this.zealot+"번째질럿의 체력은 : " + shields);
		}
	}
    void Sound(int num){
		System.out.println("My Life for Aiur.. " + num +"번째질럿생성");
	}
}
class Hydralisk { //히드라리스크 클래스 시작지점예요.
	static int power = 3; //히드라의 파워는 3입니다
}
class test {//메인클레스입니다
	public static void main(String args[]) {
		Zealot zealot1 = new Zealot(1);
		zealot1.Sound(1);
		Zealot zealot2 = new Zealot(2);
		zealot2.Sound(2);
		Hydralisk hydra = new Hydralisk();
		zealot1.UnderFire(2,Hydralisk.power);//히드라에게 2번의 공격을받았습니다
		zealot2.UnderFire(4,Hydralisk.power);//히드라에게 4번의 공격을받았습니다
	}
}

=====================================================
정답: 1번질럿의 남은 피는 4입니다.
         2번 질럿의 남은 피는 0입니다.
        빈칸  : int zealot
다음 소스 코드는 마트에서 물품 구입 후 정산 가격과 할인율을 고객에게 알려주는
시스템을 구현하고자 만들었습니다.
1~4번 중 인스턴스 변수로 사용 될 변수와 스태틱 변수로 사용될 변수를 나누고 
빈칸을 채워 주세요.
package java02;
class Discount1 {
	1  int month = 12;  // 누구에게나 1년은 12개월이겠죠?
	2  int count;           // 만약 인스턴스 변수로 사용한다면 개인적인 방문 횟수가될것같아요
                                          //여기에서는 개인적인 방문 누적 횟수로 사용하지 않을 거예요..
	3  int price;            //모두 같은 물건을 사진 않을 거예요..인스턴스 변수로 사용할 거예요 
	4  double dcRate; //할인율 이예요..
	int dcPrice;
	Discount1( ( 빈 칸 ) ){  //가격과 할인율 두 개의 파라미터를 받는군요
		this.price = price;               //데이터 타입을 잘 확인해야 할 것 같아요.
		this.dcRate = derate;
	}
	Discount1(){
	}
	static void title() {
		System.out.println("***" + month + "월 고객 감사 할인 행사***");
	}
	void dcCal() {
		dcPrice = (int) (price - price * dcRate);
		System.out.println("정가는" + price + "원 입니다");
		System.out.println("할인가는" + dcPrice + "원 입니다");
		count++;
	}
}
class test{
	public static void main(String args[]) {
		Discount1.title();
		Discount1 cal1 = new Discount1();
		cal1.price = 20000;
		cal1.dcRate = 0.2;
		cal1.dcCal();
		System.out.println("귀하는 "+Discount1.count+" 번째 손님입니다");
		Discount1 cal2 = new Discount1(40000,0.4);
		cal2.dcCal();
		System.out.println("귀하는 "+Discount1.count+" 번째 손님입니다");
	}
}
정답: static = 1.2번 /    instance = 3.4번
         빈칸 : (int price , double derate)
다음은 카드 종류와 크기를 입력하여 사용자에게 알려주는 시스템을 만들기 위한 소스 코드입니다.
아래의 빨간색으로 주석 처리 된 소스 코드 부분을 파란색 소스 코드로 변경하였더니 
에러가 발생하는군요. 에러가 발생하지 않도록 빈칸을 채워주세요. 

package java02;
class Card{
	String kind;   //카드의 무늬 - 인스턴스변수
	int number;    //카드의 숫자 - 인스턴스변수
             ( 빈 칸 ) int width = 100; //카드의 폭   Card .width로 호출 한 것을 잊지 마세요.
             ( 빈 칸 ) int height = 100; //카드의 높이 Card .heaght로 호출 한 것을 잊지 마세요.
            Card(( 빈 칸 )){          //파라미터 type을 잘 보고 선택해주세요
    	this.kind = kind;
    	this.number = number;
    }
}
class test{
	public static void main(String args[]){
		Card c1 = new Card("Heart",7);
		Card c2 = new Card("Space",4);
		System.out.println("c1은 " + c1.kind + " "+ c1.number + "번이며, 크기는 "
				           + c1.width + " , " + c1.height + "입니다)");
		System.out.println("c2은 " + c2.kind + " "+ c2.number + "번이며, 크기는 "
		           + c2.width + " , " + c2.height + "입니다)");
		System.out.println("이제 c1 , c2의 width 와 height을 각각 50,80으로 변경합니다");
		/*c1.width = 50; 
		c1.height = 80;
		c2.width = 50; 
		c2.height = 80;*/
		Card .width= 50;
		Card.height = 80;
	}
}


================================
정답 : static
         : (String kind,int number )




package java02;
public class test01 {
    public static void main(String[] args) {
		Score s = new Score("홍길동",100,100,90);
		Score s2 = new Score();
		s2.name = "임꺽정";s2.kor = 100;s2.eng = 100;s2.math = 90;
                        ============1==============
		System.out.println("-------------------s1");
		System.out.println("합계 : " + s.sum + " , " + "평균 : " + s.average);
		System.out.println("-------------------s2");
		System.out.println("합계 : " + s2.sum + " , " + "평균 : " + s2.average);
		System.out.println("-------------------end");
	}
}
package java02;
class Score {
	    String name;
		int kor,eng,math,sum;
		float average;
	public Score(){ Compute(); }   ==========2============
	public Score(String name , int kor , int eng , int math){
		this.name = name;  
                        this.kor = kor;  this.eng = eng;  this.math = math;
		Compute();
	}
	public void Compute(){
		this.sum = this.kor + this.eng + this.math;
		this.average = this.sum/ 3.0f;
	}
}
-------------------s1
합계 : 290 , 평균 : 96.666664
-------------------s2
합계 : 290 , 평균 : 96.666664
-------------------end

다음과 같은 결과가 나오도록 코드를 수정하세요. 
정답 : s2.Compute()를 1번 위치에 호출/ 2번에 위치한 Compute() 제거(안해도됨)
강사님 월요일에 이거 설명 좀 부탁 드립니다





1. 다음 빈칸에 알맞은것을 순서대로 적으시오.
// 답 : getResult,calculate,ex1

package javas;

public class ex1 {
	public char (????)(float indexValue){
		if(indexValue >30){
			return 'A'; //비만
		}else if(indexValue > 24){
			return 'B'; // 과체중			
		}else if(indexValue > 24){
			return 'C'; // 정상			
		}else if(indexValue > 24){
			return 'D'; // 저체중			
		}else if(indexValue > 24){
			return 'E'; // 마름		
		}else if(indexValue > 24){
			return 'F'; // 영양실조			
		}else{
			return 'G'; // 소모증			
		}
		
	}
	
	float calculate(float height, float weight){
		//키의 제곱
		float hData = height * height;
		//몸무게를 나눈다.
		float result = weight/hData;
		
		return result;		
	}

	public static void main(String[] args) {
		(???) m = new ex1();
		
		float h =1.8f;
		float w = 77f;
		
		float index = m.???(h, w);
		System.out.println("비만 지수 :" + index);
		System.out.println("건강지수 :" +m.getResult(index));

	}

}








2. 다음 빈칸에 알맞은것을 순서대로 적으시오. 답: PigSave, getTotal, totalMoney
  package javas;

public class PigSave {
	private int total;
	
	public int getTotal(){
		return total;
	}
	public void deposit(int amount){
		System.out.println("저금통 입금");
		total = total + amount;
	}

	public void withdraw(){
		System.out.println("저금통 배 따기");
		total =0;
	}
	
}-----------------------------------------------------------
package javas;

public class ex1 {
	public static void main(String[] args) {
		(????  ) save = new PigSave();
		save.deposit(100);
		save.deposit(500);
		int totalMoney = save.??????();
		System.out.println("총액:" + (????));
	

	}//end main

}

코드 실행 결과 :
 저금통 입금
 저금통 입금
 총액 :600







3.다음 빈칸에 알맞은것을 순서대로 적으시오.
 답 : ex1, ex1, ex1

package javas;

public class (???) {
	int a=10;
	int b=20;
	int[] c={1,2};
	
	public void ex(int a,int b){
		int imsi=a;
		a=b;
		b=imsi;
		System.out.println("ex 내의 a="+a+",b="+b);
		
	}
	
	public void ex((???) data){
		int imsi = data.a;
		data.a = data.b;
		data.b = imsi;
		System.out.println("ex 내의 data.a=" +data.a +",data.b="+data.b);
	}
	
	public static void main(String[] args) {
		ex1 my= new ex1();
		ex1 your=new ex1();
		
		System.out.println(my);
		System.out.println("원래 a=" +my.a+",b="+my.b);
		your.ex(my.a,my.b);
		System.out.println("\n1.메서드 수행후 a="+my.a+",b="+my.b);
		your.(???)(my); //
		System.out.println("\n2.메서드 수행 후 a=" +my.a+",b="+my.b);
	

	}//end main

}









4.다음 빈칸에 알맞은것을 순서대로 적으시오.  답: return, new BokBulBok(); selectOne()


package javas;

public class BokBulBok {
	
	private char[] items;
	private int nextIndex=0;
	
	public void ready(){
		items=new char[10];
		
		int index = (int)(Math.random()*items.length);
		
		for(int i=0; i<items.length; i++){
			if(i == index){
				items[i]='X';
				continue;
			}
			items[i] = 'O';
		}
		
	}
	public char selectOne(){
		(????)items[nextIndex++];
	}
	}

---------------------------------------------------------------------
package javas;

public class BokBulBokTest {

	public static void main(String[] args) {
		BokBulBok bok= (?????)
		
		bok.ready();
		for(int i=0;i<10;i++){
			char result=bok.(???);
			System.out.println(i+"번째:"+result);
		}
		
	}//end main
	
}








5.다음 빈칸에 알맞은것을 순서대로 적으시오. type, area , Shape s1
package javas;

public class Shape {
	private char (????);
	private int width;
	private int height;
	
	public Shape(char t,int w,int h){
		type = t;
		width =w;
		height =h;
	}
	
	public float getArea(){
		float area = 0f;
		
		if(type == 'T'){
			area = (width * height)/(float)2;			
		}
		return (????);		
	}
}
-------------------------------------------------------------------
package javas;

public class ShapeTest {
	public static void main(String[] args) {
		???? = new Shape('T',100,200);
		System.out.println(s1.getArea());
		
	}//end main
	
}








6. 다음 빈칸에 알맞은것을 순서대로 적으시오. 답 : Weather,this,w1

package javas;

public class (????) {
	private int year;
	private int month;
	private int date;
	private double min;
	private double max;
	
	public Weather(int year,int month, int date, double min, double max){
		(???).year = year;
		(???).month = month;
		(???).date = date;
		(???).min = min;
		(???).max = max;
	}
	public double getAvg(){
		return (min + max)/2;
	}
	
}
------------------------------------------------
package javas;

public class WeatherTest {
	public static void main(String[] args) {
		Weather w1 = new Weather(2010, 1,20,-12, 2);
		double w1Avg =(???).getAvg();
		System.out.println(w1Avg);
		
	}//end main
	
}









7. 다음 빈칸에 알맞은것을 순서대로 적으시오.   java.util.Scanner, EmplyeeUI , nextLine();

package javas;

import (????);

public class (????) {
	private Scanner scanner = new Scanner(System.in);
	
	public void regist(){
		System.out.println("신규 인사정보를 등록합니다.");
		System.out.println("이름을 입력하세요");
		String name = scanner.nextLine();
		System.out.println("사번을 입력하세요");
		String sabun = scanner.nextLine();
		System.out.println("주민번호를 넣어주세요");
		String ssn = scanner.(????);
		System.out.println("입력한 정보는 다음과 같습니다");
		System.out.println(name +"\n"+sabun+"\n"+ssn);
		
		
	}

	
	public static void main(String[] args) {
		EmplyeeUI ui = new EmplyeeUI();
		ui.regist();
		
	}
	
}









8. 다음 빈칸에 알맞은것을 순서대로 적으시오. 답: area, ConstEx,  getArea
package javas;


public class ConstEx {
	
	public static final int RECTANGLE = 1;
	public static final int TRIANGLE = 2;
	
	public double getArea(int type, int width, int height){
		double area = 0.0;
		
		if(type == RECTANGLE){
			area = width * height;			
		}else if(type == TRIANGLE){
			area= (width * height)/2;
		}
		return (???);
	}
	
	
}

---------------------------------------------------------------------
package javas;

public class ConstUI {
	public static void main(String[] args) {
		(???) ex = new ConstEx();
		int w = 100;
		int h = 50;
		System.out.println(ex.(???)(ConstEx.RECTANGLE,w,h));
		System.out.println(ex.getArea(ConstEx.TRIANGLE,w,h));
		
		
	}//end main
	
}









9. 다음 빈칸에 알맞은것을 순서대로 적으시오.  답: ArrayList, System.in, list

package net.java63.ohora;

import java.util.( ???? );
import java.util.Scanner;

public class HwTest {
  public static void main(String[] args) {        
    System.out.println("성적 입력 프로그램입니다.");
    System.out.println("해당 과목에 맞게 점수를 입력해주세요");
    
    System.out.print("국어점수?");
    Scanner scanner=new Scanner(   ?????);
    int num1 = Integer.parseInt(scanner.nextLine());
    
    System.out.print("수학점수?");
    int num2 = Integer.parseInt(scanner.nextLine());
    
    System.out.print("영어점수?");
    int num3 = Integer.parseInt(scanner.nextLine());    
    
    ArrayList (????) = new ArrayList();
    
    list.add(num1);
    list.add(num2);
    list.add(num3);
    list.add((num1+num2+num3));
    list.add((num1+num2+num3)/3);
    
    System.out.println("----------------------------");
    System.out.println("국어점수"+ list.get(0));
    System.out.println("수학점수"+list.get(1));
    System.out.println("영어점수"+list.get(2));
    System.out.println("합 계 :"+list.get(3));
    System.out.println("평균 :"+list.get(4));   
  }//end main
}//end class








10.  다음 빈칸에 알맞은것을 순서대로 적으시오. 답: MailSender , new MailSender(),  void

package javas;

public class (?????) {
	
	
	private boolean sendFlag = false;
	
	public (????) sendMain(String destination){
		if(sendFlag == false){
			System.out.println("메일을 전송합니다.");
			System.out.println("목적지 : "+destination);
			sendFlag = true;
		}else{
			System.out.println("메일을 이미 보냈습니다.");
		}
		
	}
	
}
-----------------------------------------------------------------------




package javas;

public class Mail {
	public static void main(String[] args) {
		MailSender m = (????);
		m.sendMain("aaabbb@naver.com");	
	}
}



1.실행했을 때 출력되는 것은?

package java.test;

public class Number {

int num;

public Number()

{

num=10;

System.out.println("생성자 호출!");

}

public int getNumber()

{

}

}

class Constructor1

{

public static void main(String[] args) {

return num;

Number num1=new Number();

System.out.println(num1.getNumber());

Number num2=new Number();

System.out.println(num2.getNumber());

}

}

답:

생성자호출!

10

생성자호출!

10

2.다음을 실행했을 때 출력되는 것은?

package java.test;

class ii {

private int ink;

public ii(int a){

 ink=a;

 }

public void Write(){

 ink--;

 if(ink==0){

 System.out.println("잉크없다");

 }

 else

 System.out.println("남은 잉크는 :" +ink); 

 }

 }

public class ex01{

public static void main(String[] args){

 ii a = new ii(10);

 a.Write();

 a.Write();

 a.Write();

 }

}

답:

남은 잉크는 : 9

남은 잉크는 : 8

남은 잉크는 : 7

3. 가로 3.5 세로 4.5인 도형의 넓이를 구하고 싶다. 다음의 빈칸을 알맞게 채우시오. 

package java.test;

class Rectangle {

int width;

int length;

public void SetValue(int a, int b){

width = a;

length = b;

}

Public calcArea(){

return width * length;

}

}

(1)

package javastudy;

public class calc{

public static void main(String[] args) {

Rectangle calc = Rectangle();

calc.SetValue(3.5, 4.5);

System.out.println(calc.calcArea());

}

}

답:

(1)double

(2)new

4.자바메소드 반환값에 대한 예제이다. 빈칸을 알맞게 채워라. 

package java.test;

public class Number {

int num;

public Number(int n)

{

num=n;

System.out.println("인자전달:" +n);

}

public int get Number1()

{

}

}

class Constructor2

{

public static void main(String[] args) {

Number num1 = new Number(10);

System.out.println("메소드 반환값:"+num1. ()

);

Number num2 = new Number(10);

System.out.println("메소드 반환값:"+num2. ()

);

}

}

return num;

답

(1) getNumber

(2) getNumber

5.다음을 실행했을 때 출력되는 것은?

package bibi;

class AAA {

 void isYourFunc(int n){

 System.out.println(n);

 }

 void isYourFunc(int n1,int n2){

 System.out.println(n1+","+n2);

 }

}

class OverloadMain {

 public static void main(String[] args){

 AAA c = new AAA();

 c.isYourFunc(100);

 c.isYourFunc(1000);

 }

}

답

100

1000

6.arr.length의 값은??

int[] arr = new int [7];

답

7

7. 다음을 실행했을 때 출력되는 것은?

package crycry;

public class dash {

 public static void main(String[] args) 

 {

 int[] arr =new int[5];

 for(int i=0; i<=4; i++)

 {

 arr[i]=i;

 }

 for(int j=0; j<=4; j++)

 {

 System.out.println("arr["+j+"]="+arr[j]);

 }

 }

}

답

arr[0]=0

arr[1]=1

arr[2]=2

arr[3]=3

arr[4]=4

8.키보드로 정수를 입력 받아 출력하고 싶다. 빈칸을 채우시오.

package java.test;

import java. ; (1)

public class ScanningMethods {

public static void main(String[] args) {

Scanner keyboard = new Scanner(System.in);

int i = keyboard. ();

System.out.println("입력한 숫자는?"+i);

}

}

답

(1) util.Scanner

(2) nextInt





package java01;

public class java01 {

	public static void main(String[] args) {
		String strNum = "1234.56";
		String strBool = "true";
		
		int intNum = (int) Float.parseFloat(strNum);
		float floatNum = Float.parseFloat(strNum);
		Boolean boolObj = Boolean.valueOf(strBool);
		boolean bool = boolObj.booleanValue();
		
		System.out.println("Integer.parseInt(strNum) : " + intNum);
		System.out.println("Float.parseFloat(strNum) : " + floatNum);
		System.out.println("Boolean.getBoolean(strBool) : " + bool);
		
	}

}
 

 출력 결과는 ? 
Integer.parseInt(strNum) : 1)1234
Float.parseFloat(strNum) : 2) 1234.56
Boolean.getBoolean(strBool) : 3) true


4)  답: void
package java02;


class SubscriberInfo {
	String name, id, password;
	String phoneNo, address;
	
	SubscriberInfo(String name, String id, String password){
		this.name = name;
		this.id = id;
		this.password = password;
	}
	SubscriberInfo(String name, String id, String password, 
			String phoneNo, String address){
		this.name = name;
		this.id = id;
		this.password = password;
		this.phoneNo = phoneNo;
		this.address = address;
	}
	
	4)_____ changePassword(String password){
		this.password = password;
	}
	4)_____ setPhoneNo(String phoneNo){
		this.phoneNo = phoneNo;
	}
	4)_____ setAddress(String address){
		this.address = address;
	}
}


---------------------------------------------------------------------
 5)  답:  new 6) null
package java02;

public class constrExam {
	public static void main(String args[]){
		SubscriberInfo obj1, obj2;
		obj1 = 5)___ SubscriberInfo("홍길동", "fool", "1234");
		obj2 = 5)___ SubscriberInfo("임꺽정", "gotosleep", "1234", "010-1234-xxxx", "경기도");
		
		printSubscriberInfo(obj1);
		printSubscriberInfo(obj2);
	}

	 static void printSubscriberInfo(SubscriberInfo obj) {
		System.out.println("이름 : " + obj.name);
		System.out.println("아이디 : " + obj.id);
		System.out.println("비밀번호 : " + obj.password);
		System.out.println("전화번호 : " + obj.phoneNo);
		System.out.println("주소 : " + obj.address);
		System.out.println();
	}
}
이름 : 홍길동
아이디 : fool
비밀번호 : 1234
전화번호 : 6)___
주소 : 6)___

이름 : 임꺽정
아이디 : gotosleep
비밀번호 : 1234
전화번호 : 010-1234-xxxx
주소 : 경기도











 7)  new int

package java03;

public class StudentTest2 {

	public static void main(String[] args) {
		  int a = 10;
		    Student s = 7)___ ____ Student("홍길동",100,60,76);

		  
		    System.out.println(s.info());
		    

	}

}
------------------------------------------------------------------
8) return total;
package java03;

class Student
{
  String name;
  int eng , math, kor;
  
  public Student(String name, int eng, int math, int kor)
  {
    this.name = name;
    this.eng = eng;
    this.math = math;
    this.kor = kor;
  }
  
  public int getTotal()
  {
    int total;
    total = eng + math + kor;
   8) __________
    
  }
  
  public float getAverage()
  {
    float average;
    average = 9)_____(getTotal()/3f*10+0.5f)/10f;
    return average; 
    
    
  }
  
  public String info()
  {
    return eng + " , " + math + " , "
        + kor +" , " + getTotal() + " , " +getAverage();
    
  }
}


100 , 60 , 76 , 236 , 78.7




------------------------------------------------------------------


#1
class Car{ // 1) color, gearType, door를 선언 하시오.
String color; //1)
        String gearType; //2)
        int door; //3)
        Car(){}
        Car(String c,String g, int d){        
                color = c;
                gearType = g;
                door = d;
        }
}
class CarTest{
public static void main(String[]args){
        Car c1 = new Car();        //4) Car c1의 인스턴스를 생성하고 그 타입을 설정하시오.
                c1.color = "white";
                c1.gearType = "auto";
                c1.door = 4;
        //5) Car c2의 인스턴스를 생성하고 그 타입을 설정하시오.
                Car c2 = new Car("white", "auto", 4); 
System.out.println("c1의 color="+ c1.color+",gearType="+c1.gearType+",door="+c1.door);
System.out.println("c2의 color="+ c2.color+",gearType="+c2.gearType+",door="+c2.door);
        
        }
}






#2
class Car{
                String color;
                String gearType;
                int door;
                Car(){           // 6) 생성자의 이름으로 클래스 이름대신 this를 사용하여 호출하시오.
                        this("white","auto", 4); 
                }
                Car(String color){
                this(color, "auto",4);
                }
                Car(String color, String gearType, int door){
                        /* 7) 다음에 들어갈 함수는? this*/.color = color;
                        this.gearType = gearType;
                        this.door = door;
                }
        }


        class CarTest2{
        public static void main(String[]args){
                Car c1 = /* 8) 다음에 들어갈 함수는? new*/ Car();
                Car c2 = new Car("blue");
                
                // 9) C1을 출력하시오.
System.out.println("c1의 color="+ c1.color+",gearType="+c1.gearType+",door="+c1.door);
                // 10) C2를 출력하시오.
System.out.println("c2의 color="+ c2.color+",gearType="+c2.gearType+",door="+c2.door);
                
        }
}



------------------------------------------------------------------

            

 
1. 다음 코드에 정의된 변수들을 종류별로 구분해서 적으시오.
   예)  클래스 변수,  인스턴스 변수,  지역변수
class PlayingCard {
  int kind;
  int num;

  static int width;
  static int height;
  PlayingCard(int k, int n) {
    kind = k;
    num = n;
  }
  public static void main(String args[]) {
       PlayingCard card = new PlayingCard(1,1);
  }
  }

                                              답: (클래스변수: width;, height;
                                                  인스턴스 변수: kind;, num;
                                                  지역 변수: k, n, card)
                                     






2. 문제에서 빈 괄호를 채우시오.


package java01;

public class Test40 {

	public static void main(String[] args) {
		Student s = new Student();
		s.name = "홍길동";
		s.kor = 100;
		s.eng = 60;
		s.math = 76;
		System.out.println("이름:"+s.name);
		System.out.println("총점:"+s.( )Total());
		System.out.println("평균:"+s.( )Average());

      }

}

답:  (get)







3. 다음 예제에서 변수의 타입을 적으시오.

class Exercise_ {
  public static void main(String args[]) {
  SutdaCard card1 = new SutdaCard(3, false);
  SutdaCard card2 = new SutdaCard();
  System.out.println(card1.info()); 
  System.out.println(card2.info()); 
  }
  }
class SutdaCard {
  int num;
  boolean isKwang;
  SutdaCard() {
  this(1, true); // SutdaCard(1, true)를 호출한다.
  }
  SutdaCard(int num, boolean isKwang) {
  this.num = num;
  this.isKwang = isKwang;
  }
  String info() { // 숫자를 문자열로 반환한다. 광(光)인 경우 K를 덧붙인다.
  return num + ( isKwang? "K" : "");
  }
  }
 실행결과: 3, 1K

답: (int, boolean)





4. 두 점으의 거리를 계산하는 getDistance()를 /* */ 이곳 완성하시오

class Exercise_ {
   // 두 점 (x,y)와 (x1,y1)간의 거리를 구한다.
  static double getDistance(int x, int y, int x1, int y1) { 
  /*
  */
  }
  public static void main(String args[]) {
  System.out.println(getDistance(1,1,2,2));
  }
  }
실행결과: 1.4142135623730951


답: (return Math.sqrt((x-x1)*(x-x1) + (y-y1)*(y-y1));)

5. 다음 아래의 add메서드 올바르게 오버로딩 한것은?

long add(int a, int b) { return a+b;}
1). long ad(int x, int y) { return x+y;}
2). long ad(long a, long b) { return a+b;} 
3). int ad(byte a, byte b) { return a+b;} 
4). int ad(long a, int b) { return (int)(a+b);}
5). int ad(byte a, byte b) return { a+b;} 

답: 2,3,4

                                  



6. 다음 코드 컴파일시 에러 발생한다. 컴파 에러 발생하는라인은?

class MemberCall {
   int iv = 10;
   static int cv = 20;
   int iv2 = cv;
   static int cv2 = iv;            // 라인 1 - 
   static void staticMethod1() {
   System.out.println(cv);
   System.out.println(iv);          // 라인 2 - 
   }
   void instanceMethod1() {
   System.out.println(cv);
   System.out.println(iv);         // 라인 3 -
    }
static void staticMethod2() {
staticMethod1();
instanceMethod1();         // 라인 4 - 
}
void instanceMethod2() {
staticMethod1();          // 라인 5 -
instanceMethod1();
}
}

답: ( 1, 2, 4)






7. 다음 코드의 실행결과 빈칸은?

class Exercise_
  {
  public static void change(String str) {
  str += "456";
  }
  public static void main(String[] args) 
  {
  String str = "ABC123";
  System.out.println(str);
  change(str);
  System.out.println("After change:"+str);
  }
  }
실행결과: ABC123
After change:( )

답: (ABC123)







8. 다음 코드의 <-- 라인의 빈 괄호 채우시오

class Exercise_
  {
  public static int[] shuffle(int[] arr) {
  if(arr==null || arr.length==0)
  return arr;
    for(int x=0; x< arr.length*2;x++) {
   int i = (int)(Math.random()*arr.length);
  int j = (int)(Math.random()*arr.length);
   int tmp = arr[i]; 
  arr[i] = arr[j];
  arr[j] = tmp;
  }
  return arr;
  }
  public static void main(String[] args)  
  {
  int[] original = {1,2,3,4,5,6,7,8,9};
  System.out.println(java.util.Arrays.( )(original));   <--
  int[] result = shuffle(original);
  System.out.println(java.util.Arrays.( )(result));   <--
  }
  }
 실행결과 [1, 2, 3, 4, 5, 6, 7, 8, 9]
[4, 6, 8, 3, 2, 9, 7, 1, 5]

답: (toString)






9. isNumber 메서드 부분 /* */의  ( ) 를 작성하시오.

class Exercise_ {
/*  public static boolean isNumber(String str) {
  if(  ) <--
  return false;
  for(int i=0; i< str.length();i++) {
  char ch = str.charAt(i);
  if(ch < '0' || ch > '9') {
  return false;
  }
  } 
  return true;
  }  */
  public static void main(String[] args) {
  String str = "123";
  System.out.println(str+"는 숫자입니까? "+isNumber(str));
  str = "1234o";
  System.out.println(str+"는 숫자입니까? "+isNumber(str));
}
}
실행결과: 123 숫자입니까? true
1234o은 숫자입니까? false

답: (str==null || str.equals(""))
   






10.  다음 빈곳 채우시오. <--

class Exercise_
  {
  public static int abs(int value) {
  return value  >=0? ( ) <--
  }
  public static void main(String[] args) 
  {
  int value = 5;
  System.out.println(value+"의 절대값:"+abs(value));
  value = -10;
  System.out.println(value+"의 절대값:"+abs(value));
  }
  }
실행결과:5 절대값:5
-10의 절대값 :10

답: (value : -value;)


————————————————————————————————


(   1     )java.util.Scanner; 


?public class Test28 { 


public static void main(String[] args){


Calculator.plus(10);

 Calculator.plus(2);

Calculator.multiple(7);

Calculator.minus(4);

Calculator.minus(4);


System.out.println("결과는 = " + Calculator.result);

	}

}



다음( )에 들어갈 것으로 알맞은것은

1)import

2) export

3)impliment

4)Calculator


 public class Calculator { 
   
   private static int result;  

   static int getResult() { 
     return result; 
   } 
    
   static void plus(int value) { 
     result += value; 
   } 
    
   static void minus(int value) { 
     result -= value; 
   } 
    
   static void multiple(int value) { 
     result *= value; 
   } 
    
   static void divide(int value) { 
     result /= value; 
    } 
  } 
 } 

위의 소스와 같이사용하는 변수에 접근제어자 private를 걸었을경우에
사용해야할 메소드는
1)set  메소드
2)get 메소드
3)sit 메소드
4)github 메소드
5)getter method


 다음중 접근제어자의 종류로 옳은것을 고르시오
1)public
2)private
3)protect
4)provide
5)passive


class Score { 
   String name; // 용어: 인스턴스 변수, 속성(attribute) 
   int kor; 
   int eng; 
   int math; 
   int sum; 
   float average; 
   
   public Score() { --------------------------1
     this.name = "홍길동"; 
   } 
    
   public Score(String name, int kor, int eng, int math) { --------------------------2
     this.name = name; 
     this.kor = kor; 
     this.eng = eng; 
     this.math = math; 
      
     compute(); 
   } 
    
   public void compute() { 
     this.sum = this.kor + this.eng + this.math; 
     this.average = this.sum / 3.0f; 
   } 
 } 
위의 보기처럼 1번과 2번의 함수이름이 같을경우 파라미터의 타입에 따라 변경하는 것을 무엇이라고 하는가?
1)오버로드
2)오버라이드
3)오버이트킥
4)오바이트
5)오버바이트



 public Score(String name, int kor, int eng, int math) { 
     this.name = name; 
     this.kor = kor; 
     this.eng = eng; 
     this.math = math;  
 } 


 public class Test{   
   public static void main(String[] args) { 
     System.out.println("----------------"); 
       
     Score s = (    1  ) Score((2),(3),(4),(5)); 
      
     System.out.println("이름:" + s.name); 
     System.out.println("국어:" + s.kor); 
     System.out.println("영어:" + s.eng); 
     System.out.println("수학:" + s.math); 
     System.out.println("합계:" + s.sum); 
     System.out.println("평균:" + s.average); 
     } 
  } 

위의 소스처럼 Score생성자 함수가 정의 되어있을때 ( 1 )에 들어갈 키워드와
(2) ~(5) 까지 들어가는 파라미터의 데이터 타입을 적으시오
1)new
2)String
3)int
4)int 
5)int

다음 암시적 형변환으로 옳은것을 모두고르시오
1)byte => int
2)char => int
3)int => short
4)double => float 
5)int => double


다음 문장에서 사용해야할 연산자를 고르시오
int a = 10;

byte b = ( )a;

1) int
2) byte
3)short
4)char
5)float


다음 소스에서 틀린부분을 모두 고르시오

class Score { 
   String name; 
   int kor; 
   int eng; 
   int math; 
   int sum; 
   float average; 
    
     public Score() { 
     this.name = "홍길동"; 
   } 
   
   public Score(String name, int kor, int eng, int math) { 
     this.name = name; 
     this.kor = kor; 
     this.eng = eng; 
     this.math = math; 
      
     compute(); 
   } 
    
   public void compute() { 
     this.sum = this.kor + this.eng +that.math; -----------5
     this.average = this.sum / 3.0f; 
   } 
 } 

public class Test39 { 
  
   public static void main(String[] args) { 
     System.out.println("----------------"); 
      
     (X)  s = (     6    )   (X)('홍길동', "100점", 100, 90); -----1
      
     (X) s2 = (  6   )   (X)(); 
     s2.name = "임꺽정"; 
     s2.kor = "A+"; ---------2
    (   3     )= 90; 
     s2.math = 90; -----4
     s2.compute(); 
      
   } 
  
 } 
출력문
이름 : 임꺽정
국어 : 100
영어 : 90
수학 100
총점 290
평균 96



틀린곳을 모두 체크하시오
1,2,4,5



위의 소스에서 빈칸을 체우시오
(3) => s.eng

위의 (X)에 들어갈 생성자 함수는 무엇인가?
Score




1-2. 다음은 토익점수와 점수에 맞는 코멘트를 보여주는 소스이다.
실행을 위해 빈칸을 올바르게 채우시오.

답 : 1) import java.util.Scanner
       2) static

--------------------------------------------------------------------------------------

package java01;

(   1                  	) ;

public class Exam1 {
  // 클래스 변수 선언
  (   2  ) int lc;
  (   2  ) int rc;
  (   2  ) int result = lc + rc;

static void displayResult() {
  System.out.printtln("당신의 이번 TOEIC 점수는 LC = "+lc+"점, RC = "+rc+"점 으로");
  System.out.printtln("전체 점수는"+result+"점 입니다.");
}

static void comment(){
  if (result >= 900){
	System.out.println("짝짝짝 TOEIC 미션을 완료하였습니다!");
  } else if(result < 900 && result >=800){
	System.out.println("짝짝짝 High Level 입성을 축하합니다!");
  } else if(result < 800 && result >=700){
	System.out.println("짝짝짝 Middle Level 입성을 축하합니다! 안전선 안에 들어왔네요^^");
  } else if(result < 700 && result >=600){
	System.out.println("조금 더 힘냅시다!! 아자아자!!!");
  } else if(result < 600){
	System.out.println("많은 노력과 분발이 필요합니다. 열공합시다!!");
  } else {
	System.out.println("입력한 점수 범위가 올바르지 않습니다. 다시 입력해 주세요.");
	}
  }

public static void main(String[] args) {
  Scanner scanner = new Scanner(System.in);

  System.out.print("LC 점수 : ");
  ls = Integer.parseInt(scanner.nextLine());

  System.out.print("RC 점수 : ");
  rs = Integer.parseInt(scanner.nextLine());

  //매서드 호출
  displayResult();

  comment();

  }
}



3-4. 다음은 캡슐화(encapsulation)를 보여주는 간단한 소스이다.
Cashbook.java의 빈칸은 아래의 보기를 참고하여 올바르게 채우시오.
그리고 Exam.java 소스의 빈칸을 올바르게 채우시오.

Cashbook.java의 빈칸 보기-----
public
default
private
protected
--------------------------------

답 : 3) private
      4) Cashbook.getResult()

--------------------------------------------------------------------------------------

package java01;
public class Cashbook {
 
 //클래스 멤버만 접근 가능하도록 제한한다.
  (	3	) static int result;

  // 단, 결과를 알 수 있도록 메서드 제공
  static int getResult(){
	return result;
  }

  static void income(int value){
	result += (value * 100);
  }

  static void spend(int value){
	result -= (value * 100);
  }

---------------------------------------------------------------
package java01;

import java.util.Scanner;

public class Exam {
  public static void main(String[] args){

  Cashbook.income(1000);
  Cashbook.spend(500);
  Cashbook.spend(50);
  Cashbook.income(100);

  System.out.println("잔액은 = "+ ( 	4 	) );
  }
}



5. 다음은 인스턴스 변수와 관련된 내용을 추가한 소스이다.
빈칸에 공통적으로 들어갈 올바른 내용을 채우시오.

답 : Cashbook that

package java01;

public class Cashbook {
  //인스턴스 변수 선언
  private  int result;

  static int getResult(    	5    	){
	return that.result;
  }

  static void income(    	5    	, int value){
	that.result += value;
  }

  static void spend(    	5    	, int value){
	that.result -= value;
  }
}
--------------------------------------------------------------------------------------
package java01;

import java.util.Scanner;

public class Exam {
  public static void main(String[] args){
  
  Cashbook cb1 = new Cashbook();
  Cashbook cb2 = new Cashbook();

  Cashbook.income(cb1,3000);
  Cashbook.income(cb2, 5000);
  Cashbook.spend(cb1, 300);
  Cashbook.spend(cb2, 400);
  Cashbook.income(cb1, 50);
  Cashbook.spend(cb2, 50);

  System.out.println("cb1의 잔액는 = " + Cashbook.getResult(cb1));
  System.out.println("cb2의 잔액는 = " + Cashbook.getResult(cb2));
  }
}


6-7. 아래의 소스는 boxing과 unboxing에 대한 소스이다.
아래의 boxing과 unboxing을 이용하여 아래의 1), 2)를 변경하시오.
(단, 1)에서의 변수는 a로, 2)에서의 변수는 b로 선언하라)

답 : 6) Integer a = 50
       7) int b = a;

--------------------------------------------------------------------------------------

package java01;

public class Exam {
  public static void main(String[] args) {
 
  // 7) boxing
  new Integer(50);
 
  // 8) unboxing
  a.intValue();

  }
}


8-9. 다음은 생성자와 관련한 소스이다. 빈칸에 들어갈 내용을 채워 넣으시오.
8) bike1의 속도는 90, bike2의 속도는 120으로 설정하시오.
9) 출력이 잘 나올 수 있도록 빈 칸을 채우시오.
(주의. bike1,2에 대한 것으로써 빈칸의 내용이 똑같지 않음에 유념하시오.)

답 : 8) bike1.speedUp(90), bike2.speedUp(120)
       9) bike1.showMaxSpeed(), bike2.showMaxSpeed()
 	
--------------------------------------------------------------------------------------

class Vehicle {

  private int speed = 0; // 현재 속도를 나타내는 필드
  private int maxSpeed; // 최대 속도를 나타내는 필드

public Vehicle(int mspeed) {// 생성자
  System.out.println("생성자가 호출되었습니다.");
  maxSpeed = mspeed;
}

public int showSpeed() { // 현재 속도를 보여줌.
  return speed;
}

public int showMaxSpeed() { // 최대 속도를 보여줌.
  return maxSpeed;
}

  public void speedUp(int incresment){ // 속도를 높인다.
	if(speed + increment > maxSpeed){
  	System.out.println("최대 속도" + maxSpeed + "km/h를 넘어설 수 없습니다.")
	} else {
  	speed += increment;
	}
  }

  public void speedDown(int decresment){ // 속도를 줄인다.
	if(speed - decrement < 0){
  	System.out.println("속도는 0 아래로 떨어질 수 없습니다.")
	} else {
  	speed -= increment;
	}
  }
}

class VehicleMain{
  public static void main(String[] args){

  Vehicle bike1 = new Vehicle(110);
  Vehicle bike2 = new Vehicle(140);

  (            	);
  System.out.println("bike1의 속도 : " + bike1.showSpeed() + "km/h, bike1의 최대속도 : " 
+ (     	9    	) + "km/h");
  (            	);
  System.out.println("bike2의 속도 : " + bike2.showSpeed() + "km/h, bike2의 최대속도 : " 
+ (     	9    	)  + "km/h");

  }
}
 	



10. 다음은 생성자 만들기에 관련한 소스이다.
public Student(String name, int ban, int num, int eng, int math, int kor)를
이용해 생성자를 추가해야한다. 주석(//)부분에 들어갈 내용을 채워 넣으시오.

답 : this.name = name;
 	this.ban = ban;
 	this.num = num;
 	this.eng = eng;
 	this.math = math;
 	this.kor = kor;

------------------------------------------------------------------------------

public class StudentTest2  {
  public static void main(String args[])
   {
 	int a = 10;
 	Student s = new Student("홍길동",1,1,100,60,76);
 
 	System.out.println(s.info());
 	
  } 
}

class Student {
   String name;
   int ban, num , eng , math, kor;
  
   public Student(String name, int ban, int num, int eng, int math, int kor) {
 	//
 	//
 	//
 	//
 	//
 	//
 	//
   }
  
   public int getTotal() {
 	int total;
 	total = eng + math + kor;
 	return total;
 	
   }
  
   public float getAverage() {
 	float average;
 	average = (int)(getTotal()/3f*10+0.5f)/10f;
 	return average;
 	
   }
  
   public String info() {
 	return name+","+ban+","+num+","+"eng"+","+math+","
     	+kor+","+getTotal()+","+getAverage();
 	
   }
 }







예제 1번
package Report.report01;

public class Calculator {


     static int result

     (         1        )(int value) {
       result += value
     }
     static void minus(int value) {
       result -= value
     }
     static void multiple(int value) {
       result *= value
     }
     static void divide(int value) {
       result /= value
     }
  }

----------------------------------------------------------


package Report.report01;

import java.util.Scanner


public class report01 {


 public static void main(String[] args) {

   
   Calculator.plus(20);
   Calculator.plus(10);
   Calculator.multiple(5);
   Calculator.minus(15);
   Calculator.divide(2);
   
   System.out.println(" + (        2       ));
  }

}


답 : static void plus ,    Calculator.result


예제 2번

package Report.report02;

public class report02_2 {

    (             1           )     // 
    private String edu_Name         // 
    private String edu_Content         // 
    private String edu_Term         // 
    private int edu_Time            // 
    private int edu_Account        //  
    
    
    
    public void setSubjectVO(String edu_Code, String edu_Name, String edu_Content, 
                             String edu_Term, int edu_Time, int edu_Account ){   
        this.edu_Code = edu_Code
        this.edu_Name = edu_Name
        this.edu_Content = edu_Content
        this.edu_Term = edu_Term          
        this.edu_Time = edu_Time       
        (      2       ) = edu_Account       
     }

    
    public String getEdu_Code() {
        return edu_Code
    }

    public String getEdu_Name() {
        return edu_Name
    }

    public String getEdu_Content() {
        return edu_Content
    }

    public String getEdu_Term() {
        return edu_Term
    }

    public int getEdu_Time() {
        return edu_Time
    }

    public int getEdu_Account() {
        return edu_Account
    }
    
}



package Report.report02;
import java.util.ArrayList;
import java.util.Scanner;
public class report02_1 {
    public static void main(String []args){
         
         ArrayList<report02_2> a = (             3               )
              
         report02_2 education1  = new report02_2();
         report02_2 education2  = new report02_2();
         report02_2 education3  = new report02_2();
             
         education1.setSubjectVO("A001", "java프로그래밍", "자바문법교육", "1개월", 4, 100000);   
         education2.setSubjectVO("A002", "jsp/html프로그래밍"," jsp를이용한 사이트구축", "2개월", 4, 150000);
         education3.setSubjectVO("B001", "oracle sql/plsql", "오라클을 이용한 데이터처리" , "1개월", 4, 200000);
         a.add(education1);   
         a.add(education2);   
         a.add(education3);   
         
         for ( int i=0;i<a.size();i++){
           report02_2 out= a.get(i); 
             System.out.println(out.getEdu_Code() + ", "+ out.getEdu_Name());         
         }
         
         
         
         Scanner in = new Scanner(System.in);
         System.out.println("보고 싶은 과정 코드는요 ? -> ");
         String Code = in.next();
         for ( int i=0;i<a.size();i++){
           report02_2 out= a.get(i);               
          if(Code.equals(out.getEdu_Code())){  
           System.out.println(out.getEdu_Code() + ", "+ out.getEdu_Name() + ", "+ out.getEdu_Content()
                             + ", "+ out.getEdu_Term() + ", "+ out.getEdu_Time()+ ", "+ out.getEdu_Account());                 
          }
       }
         
         
    }
}

답 : private String edu_Code ,   this.edu_Account ,    new ArrayList<report02_2>();



예제 3번
package Report.report03;
 
class Calculator{
    (      1      )
      
    public void setOprands(int left, int right){
        this.left = left
        this.right = right
    }
      
    public void sum(){
        System.out.println(            2            );
    }
      
    public void avg(){
        System.out.println((this.left+this.right)/2);
    }
}
  
public class report03 {
      
    public static void main(String[] args) {
          
        Calculator c1 = new Calculator();
        c1.setOprands(10, 20);
        c1.sum();       
        c1.avg();       
          
        Calculator c2 = new Calculator();
        c2.setOprands(20, 40);
        c2.sum();       
        c2.avg();
    }
  
}

답 :  int left, right    ,   this.left+this.right

예제 4번

package Report.report04;
(          1            ) {

  String name
  int age
  float height, weight
  
  SubEx014( String n, int a, float h, float w ) {
      this.name    = n
      this.age       = a
      this.height  = h
      this.weight = w
  }
  
  // overloading
  void update(  int a ) {
          this.age = a
  }
  
  // overloading
  void update(  int a, float h ) {
          this.age      = a
          this.height  = h 
  }

}









package Report.report04;
//
public class report04 {

 public static void main(String[] args) {

SubEx014 se = (     2    )( ", 18, 175.1f,  60.1f);
        
        System.out.print("\n");
        System.out.print(" : " + se.name);        
        System.out.print("    : " + se.age);
        System.out.print("    : " + se.height);
        System.out.print("    : " + se.weight);
        
        se.update( 22 );
        System.out.print("\n");        
        System.out.print(" : " + se.name);        
        System.out.print("    : " + se.age);
        System.out.print("    : " + se.height);
        System.out.print("    : " + se.weight); 
           
        se.update( 30, 180.2f );
        System.out.print("\n");        
        System.out.print(" : " + se.name);        
        System.out.print("    : " + se.age);
        System.out.print("    : " + se.height);
        System.out.print("    : " + se.weight);

 }

}


답 :  public class SubEx014 ,   new SubEx014

예제 5번
package Report;

import (       1      );
 
public class report05 {
 public static void main(String[] args) {
  Scanner scanner = new Scanner(System.in);
  System.out.print(": ");
  int number1 = scanner.nextInt();
  int number2 = scanner.nextInt();
  System.out.println(": "+(number1+number2));
  System.out.print(": ");
  double number3 = scanner.nextDouble();
  double number4 = scanner.nextDouble();
  System.out.println(": "+(number3+number4));
  scanner.close();
 }
}

답 :  java.util.Scanner






1. 다음 빈칸에 들어갈 코드는? 

1 (Square.length(width, height);) (Square.sLength)

다음은 가로와 세로의 길이를 받아서 사각형의 둘레와 넓이를 구하는 코드이다.
================================================================================================
package quiz;
import java.util.Scanner;

public class Quiz {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int width;                              
        int height;     
        
        System.out.println("\t" + "사각형 둘레와 넓이 구하라");
        System.out.println("\t" + "사각형의 가로와 세로의 길이를 입력하세요");
       
        System.out.print("\t" + "가로: ");
        width = input.nextInt();           
        System.out.print("\t" + "세로: ");
        height = input.nextInt();         
        
        int s1;
        int s2;
        
        (      1       );
        Square.area(width, height);
        
        System.out.println("\t" + "========================================");
        System.out.println("\t" + "사각형의 둘레는 " + (      1       ) + "입니다");
        System.out.println("\t" + "사각형의 넓이는 " + Square.sArea + "입니다" + "\n");  
       
    }
}

----------------------------------------------------------------------------------------------

package quiz;
class Square {
	static int sLength;

	static int sArea;

	static void length(int width, int height) {
		sLength = (width * 2) + (height * 2);
	}

	static void area(int width, int height) {
		sArea = width * height;
	}

}

================================================================================================

2. 위에서 둘레와 넓이의 값에 클래스 멤버만 접근 가능하도록 하려면?
private static int sLength;
private static int sArea;



3. s1.getLength(), s1.getArea()
================================================================================================

package quiz;
import java.util.Scanner;

public class Quiz {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int width;                              
        int height;     
        
        System.out.println("\t" + "사각형 둘레와 넓이 구하라");
        System.out.println("\t" + "사각형의 가로와 세로의 길이를 입력하세요");
       
        System.out.print("\t" + "가로: ");
        width = input.nextInt();           
        System.out.print("\t" + "세로: ");
        height = input.nextInt();         
        
        Square s1 = new Square();
        
        
        System.out.println("\t" + "========================================");
        System.out.println("\t" + "사각형의 둘레는 " + (          ) + "입니다");
        System.out.println("\t" + "사각형의 넓이는 " + (          ) + "입니다" + "\n");  
       
    }
}

----------------------------------------------------------------------------------------------

package quiz;

class Square {
	private int sLength;
	private int sArea;

	void length(int width, int height) {
		this.sLength = (width * 2) + (height * 2);
	}

	void area(int width, int height) {
		this.sArea = width * height;
	}

	int getLength() {
		return this.sLength;
	}
	
	int getArea() {
		return this.sArea;
	}

}
================================================================================================






4, 5. 다섯개의 숫자를 입력받아 가장 큰수와 작은수, 그 차를 출력
================================================================================================

package quiz02;

(     4     ) java.util.Scanner;

public class Quiz02 {
	public static void main(String[] args) {
		Scanner scan = new Scanner(System.in);
		int arr[] = new int[5];
		int max = 0;
		int min = 9999;

		System.out.println("5개의 정수중 큰수,작은수,큰수와 작은수의 차를 구하는 프로그램.");
		System.out.println("4자리이내의 정수를 5개 입력해주세요.");

		for (int i = 0; i < 5; i++) {
			arr[i] = scan.nextInt();
			if (arr[i] > 0 && arr[i] < 9999) {
				if (   5-1    )
					max = arr[i];
				if (   5-2    )
					min = arr[i];
			} else {
				System.out.println("INPUT ERROR! / 다시 입력 하세요");
				continue;
			}

		}
		System.out.println("입력된 수에서 가장 큰 수는 " + max + "입니다.");
		System.out.println("입력된 수에서 가장 작은 수는 " + min + "입니다.");
		System.out
				.println("입력된 수에서 가장 큰수와 가장 작은 수의 차는 " + (max - min) + "입니다.");
	}
}
================================================================================================

4. import
5. arr[i] > max, arr[i] < min





6,7. 2~9까지의 숫자 두개를 받아서 두 숫자사이의 구구단을 출력
================================================================================================
package quiz;
import java.util.Scanner;

public class Quiz {
	public static void main(String[] args) {
		int num = 0;
		int num2 = 0;

		while (true) {
			Scanner scan = new Scanner(System.in);
			System.out.println("첫번째 구구단 정수 숫자 2~9 를 입력하세요");
			num = scan.nextInt();
			if (    6    ) {

				System.out.println("두번째 구구단 정수 숫자 2~9 를 입력하세요");

				Scanner scan2 = new Scanner(System.in);
				num2 = scan2.nextInt();
				if (num2 > 1 && num2 < 10) {
					Gugudan g = new Gugudan();
					g.printGu(num, num2);
					break;
				} else {
					System.out.println("INPUT ERROR! / 다시 입력 하세요");
					continue;
				}

			} else {
				System.out.println("INPUT ERROR! /다시 입력 하세요");
				continue;
			}

		}
	}
}

----------------------------------------------------------------------------------------------

package quiz;

class Gugudan {
	int x = 0; 
	int y = 0;
	int f = 0;
	int count = 0;

	public void printGu(int num1, int num2) {
		if (num1 < num2) {
			for (f = 1; f < 10; f++) {
				for (x = num1; x <= num2; (  7-1  )) {
					System.out.print(x + " * " + f + " =" + (x * f) + "   "
							+ "\t");
					++count;
					if (num2 - x == 0) {
						System.out.println();
					}
				}
			}
		} else {
			for (f = 1; f < 10; f++) {
				for (x = num1; x >= num2; (  7-2  ) {
					System.out.print(x + " * " + f + " =" + (x * f) + "   "
							+ "\t");
					++count;
					if (num1 - x == 0) {
						System.out.println();
					}
				}
			}
		}
	}
}
================================================================================================

6. num > 1 && num < 10
7.  x++, x--




8~10. 다음은 학생의 성적을 입력받아 학점을 출력하는 코드이다.

================================================================================================
package quiz;

import java.util.Scanner;

public class Quiz {

	public static void main(String[] args) {

		Scanner scan = new Scanner(System.in);

		(         8          )

		System.out.println("성적을 입력하시오.");

		System.out.println("이름 : ");
		s.name = scan.next();

		System.out.println("중간고사 : ");
		s.midtermExam = scan.nextInt();

		System.out.println("기말고사 : ");
		s.finalExam = scan.nextInt();

		System.out.println("출석점수 : ");
		s.attendance = scan.nextInt();

		System.out.println("과제점수 : ");
		s.report = scan.nextInt();

		s.compute();
		
		System.out.println("총점 : " + s.total);

		System.out.println("학점 : " + s.grade);

	}

}

----------------------------------------------------------------------------------------------

package quiz;

class Score {
	String name;
	int midtermExam;
	int finalExam;
	int attendance;
	int report;
	float total;
	char grade;

	public Score() {
		this.name = "홍길동";
	}

	public Score(String name, int midtermExam, int finalExam, int attendance,
			int report) {
		this.name = name;
		this.midtermExam = midtermExam;
		this.finalExam = finalExam;
		this.attendance = attendance;
		this.report = report;

		compute();
	}

	// 총점은 중간고사 기말고사 출결 레포트 점수가 각각 30%,30%,20%,20%의 비율로 들어간다.
	public void compute() {
		this.total = ((3 * this.midtermExam) + (3 * this.finalExam)
				+ (2 * this.attendance) + (2 * this.report)) / 10.0f;
		
		this.grade =  (        9         );
	}

	public char hakjum(float total) {

		(         10         )
		
		switch (t / 10) {

		case 10:

		case 9:
			grade = 'A';
			break;

		case 8:
			grade = 'B';
			break;

		case 7:
			grade = 'C';
			break;

		case 6:
			grade = 'D';
			break;

		default:
			grade = 'F';

		}
		return grade;
	}
}
================================================================================================

8. (Score s = new Score();)
9. hakjum(this.total)
10. (int t = (int)total;)
	










